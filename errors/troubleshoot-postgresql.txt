
## TROUBLESHOOTING NOTES
# We have corrected this issue. For future use:
#Backup of psql data from inside a docker to the host:
        docker run -it --rm -v db01:/var/lib/pgsql/data -v /tmp/db01-backup:/backup centos tar -cf  /backup/db01-data.tar -C /var/lib/pgsql/data ./

# restore
# boot the container image with all the same settings but a new name
# (to avoid killing the prod image...aka a safety or a clone if you will)
# removing the volume that cannot be commited thus returning it to the
# main container image that can be commited

# Run db01 to support central PostgreSQL RDBMS
    docker container run -it --detach --privileged \
        --name db01-fix \
        --network hdpca-bridge \
        --hostname "db01.cloudair.lan" \
        --dns FIX THIS LINE
        --ip 172.18.0.3 \
        --restart unless-stopped \
        --volume /sys/fs/cgroup:/sys/fs/cgroup:ro \
        hdpca/db01:202001272020

# once started exec into it:
        docker exec -it db01-fix /bin/bash
# inside the docker
        rm -rf /var/lib/pgsql/data/*
# (this will piss off psql a bit but it works just peachy) from host:
        cat /tmp/db01-backup/db01-data.tar | docker exec -i db01-fix  tar x -C /var/lib/pgsql/data
        docker stop db01-fix
# then to fix psql being mad -> docker start db01-fix
        docker stop db01-fix
# and now commit the changes ->
docker commit db01-fix hdpca/db01:${BUILD_DATE}
# and the database is returned to the main image for push to ECR

{"paragraphs":[{"text":"%md\n# About This Lab\n**Objective:** Analyze data using dataframe queries\n**File locations:** /home/training/training_materials/devsh/data\n**Successful outcome:**\n**Before you begin:**\n**Related lessons:** Analyzing Data with DataFrame Queries\n\n---","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224700_-580871472","id":"20171105-200834_1116095891","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:48-0800","dateFinished":"2020-01-12T19:59:48-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:65685"},{"text":"%md\n# Setup\n---","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224701_-1743481575","id":"20181114-164229_902436001","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:48-0800","dateFinished":"2020-01-12T19:59:48-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65686"},{"text":"%sh\n\n# The following allow this notebook to run without errors\n\nhdfs dfs -rm -r -f /devsh_loudacre/base_stations.parquet\nhdfs dfs -rm -r -f /devsh_loudacre/accountdevice","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224702_-624043780","id":"20200112-182718_327301360","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:48-0800","dateFinished":"2020-01-12T19:59:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65687"},{"text":"%md\n# Lab\n---","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224704_1797882573","id":"20181114-164844_1661453681","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:53-0800","dateFinished":"2020-01-12T19:59:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65688"},{"title":"Optional","text":"%md\nReview the API docs for the Column class (which is in the Python module pyspark.sql and the Scala package org.apache.spark.sql). Take note of the various options available.","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224705_-258177520","id":"20171105-200519_752831754","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:53-0800","dateFinished":"2020-01-12T19:59:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65689"},{"title":"1 - Create a new DataFrame called accountsDF based on the Hive devsh.accounts table","text":"spark\n\n","user":"anonymous","dateUpdated":"2020-01-12T18:58:55-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224706_528963683","id":"20171105-200623_656362182","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:53-0800","dateFinished":"2020-01-12T19:59:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65690"},{"title":"2 - Try a simple query with select, using both column reference syntaxes","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-12T18:58:41-0800","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"first_name":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}},"3":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"first_name":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224707_-1810596686","id":"20200112-141613_1583455176","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65691"},{"title":"3 - Create a column object to work with, based on the first_name column in the accountsDF DataFrame","text":"%spark","user":"anonymous","dateUpdated":"2020-01-12T18:58:46-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224708_1928093121","id":"20171105-201709_849284875","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65692"},{"text":"%md\nNote that the object type is Column.\nNew Column objects are created when you perform operations on existing columns. \nCreate a new Column object based on a column expression that identifies users whose first name is Lucy using the equality operator on the fnCol object you created above.","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224709_-71594659","id":"20171105-201449_1118165660","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:54-0800","dateFinished":"2020-01-12T19:59:54-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65693"},{"title":"4 - Create a Column object based on a column expression","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-12T18:59:15-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224710_842817515","id":"20200112-142301_2075872697","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65694"},{"text":"%md\nUse the lucyCol column expression in a select statement.\nBecause lucyCol is based on a boolean expression, the column values will be true or false depending on the value of the first_name column. \nConfirm that users named Lucy are identified with the value true.","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224713_1763906633","id":"20200112-143020_171776722","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:54-0800","dateFinished":"2020-01-12T19:59:54-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65695"},{"title":"5 - Use the lucyCol column expression in a select statement","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-12T18:59:24-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224714_1475323295","id":"20200112-143038_1552091137","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65696"},{"text":"%md\nThe where operation requires a boolean-based column expression. \nUse the lucyCol column expression in a where transformation and view the data in the resulting DataFrame. \nConfirm that only users named Lucy are in the data.","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224715_1487791270","id":"20200112-145709_1691721982","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:54-0800","dateFinished":"2020-01-12T19:59:54-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65697"},{"title":"6 - Use the lucyCol column expression in a where transformation ","text":"%spark","user":"anonymous","dateUpdated":"2020-01-12T18:59:34-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224717_41452825","id":"20200112-145751_2045012434","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65698"},{"text":"%md\nColumn expressions do not need to be assigned to a variable.","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224718_594954274","id":"20200112-150456_1848116582","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:54-0800","dateFinished":"2020-01-12T19:59:54-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65699"},{"title":"7 - Try the same query without using the lucyCol variable","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-12T18:59:42-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224719_-1567182721","id":"20200112-150525_949779830","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65700"},{"text":"%md\nColumn expressions are not limited to where operations like those above. \nThey can be used in any transformation for which a simple column could be used, such as a select.\nTry selecting the city and state columns, and the first three characters of the phone_number column (in the U.S., the first three digits of a phone number are known as the area code).\nUse the substr operator on the phone_number column to extract the area code.","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224721_629181682","id":"20200112-150851_1465971801","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:54-0800","dateFinished":"2020-01-12T19:59:54-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65701"},{"title":"8 - Select the city and state columns and the first three characters of the phone number column","text":"%spark","user":"anonymous","dateUpdated":"2020-01-12T18:59:50-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224722_-1486632078","id":"20200112-151053_2116683653","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65702"},{"text":"%md\nNotice that in the last step, the values returned by the query were correct, but the column name was substring(phone_number, 1, 3), which is long and hard to work with. ","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224723_-385485017","id":"20200112-151526_1064767945","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:54-0800","dateFinished":"2020-01-12T19:59:54-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65703"},{"title":"9 - Repeat the same query, using the alias operator to rename that column as area_code","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-12T18:59:56-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224725_-698261783","id":"20200112-151611_1794288754","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65704"},{"text":"%md\nPerform a query that results in a DataFrame with just first_name and last_name columns, and only includes users whose first and last names both begin with the same two letters.\n(For example, the user Roberta Roget would be included, because both her first and last names begin with “Ro”.)","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224726_-1048260843","id":"20200112-151929_1221629183","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:54-0800","dateFinished":"2020-01-12T19:59:54-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65705"},{"title":"10 - Perform a query with just first_name and last_name columns, and only includes users whose first and last names both begin with the same two letters","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-12T19:00:11-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224728_494446490","id":"20200112-152044_1891437338","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65706"},{"text":"%md\n### Group and Count Data by Name\n\nQuery the accountsDF DataFrame using groupBy with count to find out the total number people sharing each last name. \n(Note that the count aggregation transformation returns a DataFrame, unlike the count DataFrame action, which returns a single value to the driver.)","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224729_-1174479718","id":"20200112-152713_393120046","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:54-0800","dateFinished":"2020-01-12T19:59:54-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65707"},{"title":"11 - Query the accountsDF DataFrame using groupBy with count","text":"%spark","user":"anonymous","dateUpdated":"2020-01-12T19:00:25-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224731_412615696","id":"20200112-152806_1340776577","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65708"},{"text":"%md\nYou can also group by multiple columns.","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224732_1316578089","id":"20200112-153217_974581894","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:54-0800","dateFinished":"2020-01-12T19:59:54-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65709"},{"title":"12 - Query accountsDF again, this time counting the number of people who share the same last and first name","text":"%spark","user":"anonymous","dateUpdated":"2020-01-12T19:00:35-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224734_1735650821","id":"20200112-153259_1823976934","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65710"},{"text":"%md\n### Join Account Data with Cellular Towers by Zip Code\n\nIn this section, you will join the accounts data that you have been using with data about cell tower base station locations, which is in the base_stations.parquet file. \nStart by reviewing the schema and a few records of the data using the parquet-tools command.\n\n\n```shell\n$ parquet-tools schema /home/training/training_materials/devsh/data/base_stations.parquet\n$ parquet-tools head /home/training/training_materials/devsh/data/base_stations.parquet\n```","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224735_1141661342","id":"20200112-153814_1924777085","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:54-0800","dateFinished":"2020-01-12T19:59:54-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65711"},{"title":"13 - Review the schema and a few records of the data using the parquet-tools command","text":"%sh\n","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224737_740488984","id":"20200112-153926_2041877918","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65712"},{"title":"14 - Upload the base_stations.parquet file to /devsh_loudacre","text":"%sh\n","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224738_91475920","id":"20200112-155029_173640731","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65713"},{"text":"%md\nCreate a new DataFrame called baseDF using the base stations data.\nReview the baseDF schema and data to ensure it matches the data in the Parquet file.","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224739_1820163373","id":"20200112-155545_1557712468","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:55-0800","dateFinished":"2020-01-12T19:59:55-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65714"},{"title":"15 - Create a new DataFrame called baseDF using the base stations data","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-12T19:00:44-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224741_-818995358","id":"20200112-155648_2079735864","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65715"},{"text":"%md\nSome account holders live in zip codes that have a base station.\nJoin baseDF and accountsDF to find those users.\nFor each of those users, include their account ID, first name, last name, and the ID and location data (latitude and longitude) for the base station in their zip code.","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224742_879250651","id":"20200112-160205_74480421","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:55-0800","dateFinished":"2020-01-12T19:59:55-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65716"},{"title":"16 - Join baseDF and accountsDF to find users that live close to a base station","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-12T19:00:53-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224744_-1649099569","id":"20200112-160341_929651332","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65717"},{"text":"%md\n### Count Active Devices\n\nThe accountdevice CSV dataset contains a list of all the devices used by all accounts. \nEach row in the data set includes a row ID, an account ID, an ID for the type of device, the date the device was activated for the account, and the specific device ID.\nThe CSV data file is in the /home/training/training_materials/devsh/data/accountdevice directory. \nReview the data in the data set, then upload the directory and its contents to the HDFS directory /devsh_loudacre/accountdevice.","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224745_666853248","id":"20200112-161100_980854870","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:55-0800","dateFinished":"2020-01-12T19:59:55-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65718"},{"title":"17 - Upload the accountdevice directory in /devsh_loudacre/","text":"%sh\n","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224747_-1397083205","id":"20200112-161628_1343845372","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65719"},{"title":"18 - Create a DataFrame from the account device data","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-12T19:01:05-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224748_-1226681588","id":"20200112-162551_2018321312","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65720"},{"text":"%md\nUse the account device data and the DataFrames you created previously in this exercise to find the total number of each device model across all active accounts— that is, accounts that have not been closed. \nThe new DataFrame should be sorted from most to least common model. \nSave the data as Parquet files in a directory called /devsh_loudacre/top_devices with the following columns:\n\n| Column Name    | Description                                                                                    | Example  |\n| -------------- |------------------------------------------------------------------------------------------------| ---------|\n| device_id      | The ID number of each known device (including those that might not be in use by any account)   |       18 |\n| make           | The manufacturer name for the device                                                           |    Ronin |\n| model          | The model name for the device                                                                  | Novelty Note 2  |\n| active_num     | The total number of the model used by active accounts           | 2092 |\n\n\nHints:\n\n* Active accounts are those with a null value for acct_close_dt (account close date) in the accounts table.\n* The account_id column in the device accounts data corresponds to the acct_num column in accounts table.\n* The device_id column in the device accounts data corresponds to the devnum column in the list of known devices in the /devsh_loudacre/devices.json file.\n* When you count devices, use withColumnRenamed to rename the count column to active_num. (The count column name is ambiguous because it is both a function and a column.)\n* The query to complete this exercise is somewhat complicated and includes a sequence of many transformations. You may wish to assign variables to the intermediate DataFrames resulting from the transformations that make up the query to make the code easier to work with and debug.\n\n","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224750_-66202024","id":"20200112-162831_117312701","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:55-0800","dateFinished":"2020-01-12T19:59:55-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65721"},{"title":"19 - Find the total number of each device across all active accounts","text":"%spark","user":"anonymous","dateUpdated":"2020-01-12T19:01:13-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224752_1803352425","id":"20200112-164930_1004463609","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65722"},{"text":"%md\n# Result\n**You have now:** worked with dataframes to perform data analysis\n\n---\n","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224753_-1999937748","id":"20181119-142716_792318228","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:55-0800","dateFinished":"2020-01-12T19:59:55-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65723"},{"text":"%md\n# Solution\n---","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224755_1812268439","id":"20171113-155535_1769142099","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:55-0800","dateFinished":"2020-01-12T19:59:55-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65724"},{"title":"1 - Create a new DataFrame called accountsDF based on the Hive devsh.accounts table","text":"%spark\n\nval accountsDF = spark.read.table(\"devsh.accounts\")","user":"anonymous","dateUpdated":"2020-01-12T19:01:24-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"acct_num":"string","acct_create_dt":"string","acct_close_dt":"string","first_name":"string","last_name":"string","address":"string","city":"string","state":"string","zipcode":"string","phone_number":"string","created":"string","modified":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224756_2119632779","id":"20200112-140838_1768087801","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:55-0800","dateFinished":"2020-01-12T19:59:55-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65725"},{"title":"2 - Try a simple query with select, using both column reference syntaxes","text":"%spark\n\nz.show(accountsDF.select(accountsDF(\"first_name\")))\nz.show(accountsDF.select($\"first_name\"))","user":"anonymous","dateUpdated":"2020-01-12T19:03:37-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"first_name":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}},"3":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"first_name":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224757_1152016046","id":"20181115-092436_561920580","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T19:59:55-0800","dateFinished":"2020-01-12T20:00:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65726"},{"title":"3 - Create a column object to work with, based on the first_name column in the accountsDF DataFrame","text":"%spark\n\nval fnCol = accountsDF(\"first_name\")","user":"anonymous","dateUpdated":"2020-01-12T19:08:00-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224759_-1927879729","id":"20200112-141802_1054964679","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:05-0800","dateFinished":"2020-01-12T20:00:05-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65727"},{"title":"4 - Create a Column object based on a column expression","text":"%spark\n\nval lucyCol = (fnCol === \"Lucy\")","user":"anonymous","dateUpdated":"2020-01-12T19:13:44-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224761_-1073294509","id":"20200112-142648_9596488","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:05-0800","dateFinished":"2020-01-12T20:00:05-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65728"},{"title":"5 - Use the lucyCol column expression in a select statement","text":"%spark\n\nz.show(accountsDF.select($\"first_name\",$\"last_name\", lucyCol))","user":"anonymous","dateUpdated":"2020-01-12T19:18:35-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"first_name":"string","last_name":"string","(first_name = Lucy)":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224763_913119519","id":"20200112-143300_1634366214","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:05-0800","dateFinished":"2020-01-12T20:00:05-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65729"},{"title":"6 - Use the lucyCol column expression in a where transformation ","text":"%spark\n\nz.show(accountsDF.where(lucyCol))","user":"anonymous","dateUpdated":"2020-01-12T19:19:08-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"acct_num":"string","acct_create_dt":"string","acct_close_dt":"string","first_name":"string","last_name":"string","address":"string","city":"string","state":"string","zipcode":"string","phone_number":"string","created":"string","modified":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224766_1440620893","id":"20200112-145904_1415865387","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:05-0800","dateFinished":"2020-01-12T20:00:08-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65730"},{"title":"7 - Try the same query without using the lucyCol variable","text":"%spark\n\nz.show(accountsDF.where(accountsDF(\"first_name\") === \"Lucy\"))","user":"anonymous","dateUpdated":"2020-01-12T19:20:25-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"acct_num":"string","acct_create_dt":"string","acct_close_dt":"string","first_name":"string","last_name":"string","address":"string","city":"string","state":"string","zipcode":"string","phone_number":"string","created":"string","modified":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224768_-1046723528","id":"20200112-150715_766693464","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:08-0800","dateFinished":"2020-01-12T20:00:09-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65731"},{"title":"8 - Select the city and state columns and the first three characters of the phone number column","text":"%spark\n\nz.show(accountsDF.select($\"city\", $\"state\", $\"phone_number\".substr(1,3)))","user":"anonymous","dateUpdated":"2020-01-12T19:57:14-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"city":"string","state":"string","substring(phone_number, 1, 3)":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224770_1423607152","id":"20200112-151240_768748553","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:09-0800","dateFinished":"2020-01-12T20:00:10-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65732"},{"title":"9 - Repeat the same query, using the alias operator to rename that column as area_code","text":"%spark\n\nz.show(accountsDF.select($\"city\", $\"state\", $\"phone_number\".substr(1,3).alias(\"area_code\")))","user":"anonymous","dateUpdated":"2020-01-12T19:22:30-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"city":"string","state":"string","area_code":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224773_-1605328666","id":"20200112-151632_64424046","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:10-0800","dateFinished":"2020-01-12T20:00:10-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65733"},{"title":"10 - Perform a query with just first_name and last_name columns, and only includes users whose first and last names both begin with the same two letters","text":"%spark\n\nz.show(accountsDF.select($\"first_name\",$\"last_name\").where($\"first_name\".substr(1,2) === $\"last_name\".substr(1,2)))\n","user":"anonymous","dateUpdated":"2020-01-12T19:24:31-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"first_name":"string","last_name":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224775_-151911163","id":"20200112-152226_1854965189","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:11-0800","dateFinished":"2020-01-12T20:00:11-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65734"},{"title":"11 - Query the accountsDF DataFrame using groupBy with count","text":"%spark\n\nz.show(accountsDF.groupBy(\"last_name\").count())","user":"anonymous","dateUpdated":"2020-01-12T19:25:21-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"last_name":"string","count":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"last_name","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"count","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224777_-1151291524","id":"20200112-152830_1772531488","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:11-0800","dateFinished":"2020-01-12T20:00:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65735"},{"title":"12 - Query accountsDF again, this time counting the number of people who share the same last and first name","text":"%spark\n\nz.show(accountsDF.groupBy(\"last_name\",\"first_name\").count())","user":"anonymous","dateUpdated":"2020-01-12T19:25:58-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"last_name":"string","first_name":"string","count":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224780_-468020501","id":"20200112-153408_855238257","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:14-0800","dateFinished":"2020-01-12T20:00:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65736"},{"title":"13 - Review the schema and a few records of the data using the parquet-tools command","text":"%sh\n\nparquet-tools schema /home/training/training_materials/devsh/data/base_stations.parquet\nparquet-tools head /home/training/training_materials/devsh/data/base_stations.parquet","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224782_837994060","id":"20200112-154816_141130711","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:16-0800","dateFinished":"2020-01-12T20:00:19-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65737"},{"title":"14 - Upload the base_stations.parquet file to /devsh_loudacre","text":"%sh\n\nhdfs dfs -put /home/training/training_materials/devsh/data/base_stations.parquet /devsh_loudacre","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224784_817290415","id":"20200112-155140_1898004953","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:19-0800","dateFinished":"2020-01-12T20:00:21-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65738"},{"title":"15 - Create a new DataFrame called baseDF using the base stations data","text":"%spark\n\nval baseDF = spark.read.parquet(\"/devsh_loudacre/base_stations.parquet\")\nz.show(baseDF)","user":"anonymous","dateUpdated":"2020-01-12T19:26:53-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"id":"string","zip":"string","city":"string","state":"string","lat":"string","lon":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224786_398996173","id":"20200112-155746_1774759971","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:21-0800","dateFinished":"2020-01-12T20:00:23-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65739"},{"title":"16 - Join baseDF and accountsDF to find users that live close to a base station","text":"%spark\n\nz.show(accountsDF.select($\"acct_num\",$\"first_name\",$\"last_name\",$\"zipcode\").join(baseDF, $\"zip\" === $\"zipcode\"))","user":"anonymous","dateUpdated":"2020-01-12T19:35:39-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"acct_num":"string","first_name":"string","last_name":"string","zipcode":"string","id":"string","zip":"string","city":"string","state":"string","lat":"string","lon":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224788_-439125701","id":"20200112-160544_1190452153","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:23-0800","dateFinished":"2020-01-12T20:00:24-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65740"},{"title":"17 - Upload the accountdevice directory in /devsh_loudacre/","text":"%sh\n\nhdfs dfs -put /home/training/training_materials/devsh/data/accountdevice /devsh_loudacre","user":"anonymous","dateUpdated":"2020-01-12T19:36:10-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224792_542225919","id":"20200112-161833_1780105065","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:24-0800","dateFinished":"2020-01-12T20:00:26-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65741"},{"title":"18 - Create a DataFrame from the account device data","text":"%spark\n\nval accountDeviceDF = spark.read.option(\"header\",\"true\").option(\"inferSchema\",\"true\").csv(\"/devsh_loudacre/accountdevice\")","user":"anonymous","dateUpdated":"2020-01-12T19:36:38-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224794_-1548189044","id":"20200112-162339_1419543639","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:27-0800","dateFinished":"2020-01-12T20:00:29-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65742"},{"title":"19 - Find the total number of each device across all active accounts","text":"%spark\n\n// Create a DataFrame with only active accounts\nval activeAccountsDF = accountsDF.where(accountsDF(\"acct_close_dt\").isNull)\n\n// Create a DataFrame with a device model IDs for only devices used by active accounts\nval activeAcctDevsDF =  activeAccountsDF.join(accountDeviceDF,activeAccountsDF(\"acct_num\") === accountDeviceDF(\"account_id\")).select(\"device_id\")\n\n// Sum up the total number of each device model \nval sumDevicesDF = activeAcctDevsDF.groupBy(\"device_id\").count().withColumnRenamed(\"count\",\"active_num\")\n\n// Order by count in descending order\nval orderDevicesDF = sumDevicesDF.orderBy($\"active_num\".desc)\n\n// create a DataFrame based on the devices.json file\nval devDF = spark.read.json(\"/devsh_loudacre/devices.json\")\n\n// Join the list of device model totals with the list of devices\n// to get the make and model for each device\nval joinDevicesDF = orderDevicesDF.join(devDF,orderDevicesDF(\"device_id\") === devDF(\"devnum\"))\n\n// Write out the data with the correct columns\n// use overwrite mode so solution can be run multiple times\njoinDevicesDF.select(\"device_id\",\"make\",\"model\",\"active_num\").write.mode(\"overwrite\").save(\"/devsh_loudacre/top_devices\")\n\nz.show(joinDevicesDF.select(\"device_id\",\"make\",\"model\",\"active_num\"))\n\n// Review exercise results\n// $ hdfs dfs -get /devsh_loudacre/top_devices /tmp/\n// $ parquet-tools head /tmp/top_devices","user":"anonymous","dateUpdated":"2020-01-12T19:52:30-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"device_id":"string","make":"string","model":"string","active_num":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224796_972543275","id":"20200112-165123_336323532","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:29-0800","dateFinished":"2020-01-12T20:00:51-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65743"},{"title":"Additional resources","text":"%md\nWe hope you've enjoyed this lab. Below are additional resources that you should find useful:\n\n1. [Cloudera Tutorials](http://cloudera.com/tutorials.html) are your natural next step where you can explore Spark in more depth.\n2. [Cloudera Community](https://community.cloudera.com) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Apache Spark Documentation](https://spark.apache.org/documentation.html) - official Spark documentation.\n4. [Apache Zeppelin Project Home Page](https://zeppelin.apache.org) - official Zeppelin web site.","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":10,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224798_-785221566","id":"20181116-135131_93712280","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:51-0800","dateFinished":"2020-01-12T20:00:51-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65744"},{"text":"%angular\n</br>\n</br>\n</br>\n</br>\n<center>\n<a href=\"https://www.cloudera.com/about/training/courses.html\">\n  <img src=\"https://www.cloudera.com/content/dam/www/marketing/media-kit/logo-assets/cloudera_logo_darkorange.png\" alt=\"Cloudera University\" style=\"width:280px;height:40px;border:0;\" align=\"middle\">\n</a>\n</center>\n</br>\n</br>","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":2,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224800_-1478261839","id":"20200110-154537_1406191376","dateCreated":"2020-01-12T18:57:04-0800","dateStarted":"2020-01-12T20:00:52-0800","dateFinished":"2020-01-12T20:00:52-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65745"},{"text":"%angular\n","user":"anonymous","dateUpdated":"2020-01-12T18:57:04-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578884224801_1884790383","id":"20200110-162013_302547143","dateCreated":"2020-01-12T18:57:04-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:65746"}],"name":"Labs/Scala/AnalyzingDataWithDataframeQueries","id":"2EX5GNBMA","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"angular:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}
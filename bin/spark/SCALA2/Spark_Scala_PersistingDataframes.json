{"paragraphs":[{"text":"%md\n# About This Lab\n**Objective:** Become familiar with dataframes persisting operations\n**File locations:** /devsh_loudacre/\n**Successful outcome:**\n**Before you begin:**\n**Related lessons:** Distributed Data Persistence\n\n---","user":"anonymous","dateUpdated":"2020-01-13T18:16:43-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177064_1337651821","id":"20171105-200834_1116095891","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:10-0800","dateFinished":"2020-01-13T18:31:10-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:79081"},{"text":"%md\n# Setup\n---","user":"anonymous","dateUpdated":"2020-01-13T18:16:50-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177065_1565560827","id":"20181114-164229_902436001","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:10-0800","dateFinished":"2020-01-13T18:31:10-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79082"},{"text":"%sh\n\n# This is to ensure that the notebook runs from top to bottom without errors any number of time\nhdfs dfs -rm -r -f /devsh_loudacre/accountdevice\nhdfs dfs -put /home/training/training_materials/devsh/data/accountdevice /devsh_loudacre/\n","user":"anonymous","dateUpdated":"2020-01-13T18:16:59-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177066_947914447","id":"20200113-171951_272037147","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:10-0800","dateFinished":"2020-01-13T18:31:15-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79083"},{"text":"%md\n# Lab\n---","user":"anonymous","dateUpdated":"2020-01-13T18:17:08-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177068_290039103","id":"20181114-164844_1661453681","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:15-0800","dateFinished":"2020-01-13T18:31:15-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79084"},{"text":"%md\n## Compare the Execution Plans of Persisted and Unpersisted Queries","user":"anonymous","dateUpdated":"2020-01-13T18:17:13-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177069_1484589383","id":"20171105-200519_752831754","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:15-0800","dateFinished":"2020-01-13T18:31:15-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79085"},{"text":"%md\nCreate a DataFrame that joins account data for all accounts with their associated devices. To save time and effort, copy this code \n\n```spark\nval accountsDF = spark.read.table(\"devsh.accounts\")\nval accountDeviceDF = spark.read.option(\"header\",\"true\").option(\"inferSchema\",\"true\").csv(\"/devsh_loudacre/accountdevice\")\nval accountsDevsDF =  accountsDF.join(accountDeviceDF,$\"account_id\"=== $\"acct_num\")\n```\n","user":"anonymous","dateUpdated":"2020-01-13T18:19:14-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177070_1375920741","id":"20181115-084123_1911813743","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:15-0800","dateFinished":"2020-01-13T18:31:15-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79086"},{"title":"1 - Create a DataFrame that joins account data for all accounts with their associated devices","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-13T18:19:32-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177071_-387769125","id":"20171105-200623_656362182","dateCreated":"2020-01-13T18:16:17-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79087"},{"text":"%md\nThe query code you pasted above defines a new DataFrame called accountsDevsDF, which joins account data and device data.","user":"anonymous","dateUpdated":"2020-01-13T18:19:35-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177072_-1584001500","id":"20171105-201923_413365117","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:15-0800","dateFinished":"2020-01-13T18:31:15-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79088"},{"title":"2 - Try executing a query starting with the accountsDevsDF DataFrame that displays the account number, first name, last name and device ID for each row","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-13T18:19:50-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177073_-1776245725","id":"20171105-201709_849284875","dateCreated":"2020-01-13T18:16:17-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79089"},{"text":"%md\nIn your browser, go to the SQL tab of your application’s Spark UI, and view the execution visualization of the query you just executed.\nTake note of the complexity so that you can compare it to later executions when using persistence.\nRemember that queries are listed in the SQL tab in the order they were executed, starting with the most recent.\nThe descriptions of multiple executions of the same action will not distinguish one query from another, so make sure you choose the correct one for the query you are looking at.","user":"anonymous","dateUpdated":"2020-01-13T18:19:56-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177074_-430511853","id":"20171105-201449_1118165660","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:15-0800","dateFinished":"2020-01-13T18:31:15-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79090"},{"title":"3 - In your Spark shell, persist the accountsDevsDF DataFrame using the default storage level","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-13T18:20:10-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177075_-1020722032","id":"20200113-173013_1420087529","dateCreated":"2020-01-13T18:16:17-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79091"},{"title":"4 - Repeat the final steps of the query you executed above","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-13T18:20:26-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177076_1754077607","id":"20200113-173146_1029356874","dateCreated":"2020-01-13T18:16:17-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79092"},{"text":"%md\nIn the browser, reload the Spark UI SQL tab, and view the execution diagram for the query just executed.\nNotice that it has far fewer steps.\nInstead of reading, filtering, and joining the data from the two sources, it reads the persisted data from memory.\nIf you hover your mouse over the memory scan step, you will see that the only operation it performs on the data in memory is the last step of the query: the unpersisted select transformation.\nCompare the diagram for this query with the first one you executed above, before persisting.","user":"anonymous","dateUpdated":"2020-01-13T18:20:29-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177077_-1286631276","id":"20200113-173335_98191925","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:16-0800","dateFinished":"2020-01-13T18:31:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79093"},{"text":"%md\nThe first time you execute a query on a persisted DataFrame, Dataset, or RDD, Spark has to execute the full query in order to materialize the data that gets saved in memory or on disk.\nCompare the difference between the first and second queries after executing persist by re-executing the query one final time.\nThen use the Spark UI to compare both queries executed after the persist operation, and consider these questions:\n\n* Do the execution diagrams differ? Why or why not?\n* Did one query take longer than the other? If so, which one, and why?","user":"anonymous","dateUpdated":"2020-01-13T18:20:35-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177079_1342296424","id":"20200113-173658_661424459","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:16-0800","dateFinished":"2020-01-13T18:31:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79094"},{"title":"5 - Repeat the final steps of the query you executed above one more time","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-13T18:20:54-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177080_1553565718","id":"20200113-173749_244416327","dateCreated":"2020-01-13T18:16:17-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79095"},{"text":"%md\n### View Storage for Persisted DataFrames\nView the Storage tab in the Spark UI to see currently persisted data. \nThe list shows the RDD identified by the execution plan for the query that generated the data. Consider these questions:\n\n* What is the storage level of the RDD?\n* How many partitions of the RDD were persisted and how much space do those partitions take up in memory and on disk?\n* Note that only a small percentage of the data is cached. Why is that? How could you cache more of the data?\n* Click the RDD name to view the storage details. Which executors are storing data for this RDD?","user":"anonymous","dateUpdated":"2020-01-13T18:20:57-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177081_-121148812","id":"20200113-174239_866470870","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:16-0800","dateFinished":"2020-01-13T18:31:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79096"},{"text":"%md\nExecute the same query as above using the write action instead of show.\n\n```spark\naccountsDevsDF.write.mode(\"overwrite\").save(\"/devsh_loudacre/accounts_devices\")\n```","user":"anonymous","dateUpdated":"2020-01-13T18:22:17-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177083_1046108136","id":"20200113-174733_318286018","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:16-0800","dateFinished":"2020-01-13T18:31:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79097"},{"title":"6 - Execute the same query as above using the write action instead of show","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-13T18:22:33-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177084_261668313","id":"20200113-174743_1619983615","dateCreated":"2020-01-13T18:16:17-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79098"},{"text":"%md\nReload the Spark UI Storage tab.\n\n* What percentage of the data is cached? Why? How does this compare to the last time you persisted the data?\n* How much memory is the data taking up? How much disk space?","user":"anonymous","dateUpdated":"2020-01-13T18:22:38-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177085_255596507","id":"20200113-175504_352145927","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:16-0800","dateFinished":"2020-01-13T18:31:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79099"},{"title":"7 - Unpersist the accountsDevsDF DataFrame","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-13T18:22:51-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177087_-390719452","id":"20200113-175658_1730267431","dateCreated":"2020-01-13T18:16:17-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79100"},{"text":"%md\nView the Spark UI Storage to verify that the cache for accountsDevsDF has been removed.\n\nRepersist the same DataFrame, setting the storage level to save the data to files on disk, replicated twice.\n\n```pyspark\nimport org.apache.spark.storage.StorageLevel\naccountsDevsDF.persist(StorageLevel.DISK_ONLY_2)\n```","user":"anonymous","dateUpdated":"2020-01-13T18:24:10-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177089_-1344377263","id":"20200113-175907_490802912","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:16-0800","dateFinished":"2020-01-13T18:31:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79101"},{"title":"8 - Repersist the same DataFrame, setting the storage level to save the data to files on disk, replicated twice","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-13T18:24:26-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177090_1365280285","id":"20200113-180236_1029806508","dateCreated":"2020-01-13T18:16:17-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79102"},{"title":"9 - Reexecute the previous query","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-13T18:24:38-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177091_-874845177","id":"20200113-180510_2110527833","dateCreated":"2020-01-13T18:16:17-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79103"},{"text":"%md\nReload the Storage tab to confirm that the storage level for the RDD is set correctly.\nAlso consider these questions:\n\n* How much memory is the data taking up? How much disk space?\n* Which executors are storing the RDD’s data files?\n* How many partitions are stored? Are they replicated? Where?","user":"anonymous","dateUpdated":"2020-01-13T18:24:44-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177092_1807384131","id":"20200113-180801_1905942936","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:16-0800","dateFinished":"2020-01-13T18:31:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79104"},{"text":"%md\n# Result\n**You have now:** explored DataFrame persistence.\n\n---","user":"anonymous","dateUpdated":"2020-01-13T18:24:48-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177093_1762621976","id":"20181119-142716_792318228","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:16-0800","dateFinished":"2020-01-13T18:31:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79105"},{"text":"%md\n# Solution\n---","user":"anonymous","dateUpdated":"2020-01-13T18:24:53-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177094_381225409","id":"20171113-155535_1769142099","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:16-0800","dateFinished":"2020-01-13T18:31:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79106"},{"title":"1 - Create a DataFrame that joins account data for all accounts with their associated devices","text":"%spark\n\nval accountsDF = spark.read.table(\"devsh.accounts\")\nval accountDeviceDF = spark.read.option(\"header\",\"true\").option(\"inferSchema\",\"true\").csv(\"/devsh_loudacre/accountdevice\")\nval accountsDevsDF =  accountsDF.join(accountDeviceDF,$\"account_id\"=== $\"acct_num\")","user":"anonymous","dateUpdated":"2020-01-13T18:25:35-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177095_-121533567","id":"20200113-171321_578940617","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:17-0800","dateFinished":"2020-01-13T18:31:17-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79107"},{"title":"2 - Try executing a query starting with the accountsDevsDF DataFrame that displays the account number, first name, last name and device ID for each row","text":"%spark\n\nz.show(accountsDevsDF.select($\"acct_num\",$\"first_name\",$\"last_name\",$\"device_id\"))","user":"anonymous","dateUpdated":"2020-01-13T18:26:11-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"acct_num":"string","first_name":"string","last_name":"string","device_id":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177096_-1999164495","id":"20200113-171739_2101988357","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:17-0800","dateFinished":"2020-01-13T18:31:18-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79108"},{"title":"3 - In your Spark shell, persist the accountsDevsDF DataFrame using the default storage level","text":"%spark\n\naccountsDevsDF.persist()\n","user":"anonymous","dateUpdated":"2020-01-13T18:26:34-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177098_-160655225","id":"20200113-173043_1036754523","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:18-0800","dateFinished":"2020-01-13T18:31:18-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79109"},{"title":"4 - Repeat the final steps of the query you executed above","text":"%spark\n\nz.show(accountsDevsDF.select($\"acct_num\",$\"first_name\",$\"last_name\",$\"device_id\"))","user":"anonymous","dateUpdated":"2020-01-13T18:27:02-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"acct_num":"string","first_name":"string","last_name":"string","device_id":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177099_1227174126","id":"20200113-173204_587084068","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:18-0800","dateFinished":"2020-01-13T18:31:18-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79110"},{"title":"5 - Repeat the final steps of the query you executed above one more time","text":"%spark\n\nz.show(accountsDevsDF.select($\"acct_num\",$\"first_name\",$\"last_name\",$\"device_id\"))","user":"anonymous","dateUpdated":"2020-01-13T18:27:42-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"acct_num":"string","first_name":"string","last_name":"string","device_id":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177100_-1044651781","id":"20200113-173843_411774913","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:18-0800","dateFinished":"2020-01-13T18:31:19-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79111"},{"title":"6 - Execute the same query as above using the write action instead of show","text":"%spark\n\naccountsDevsDF.write.mode(\"overwrite\").save(\"/devsh_loudacre/accounts_devices\")","user":"anonymous","dateUpdated":"2020-01-13T18:28:10-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177101_-436513755","id":"20200113-174948_2101451955","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:19-0800","dateFinished":"2020-01-13T18:31:28-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79112"},{"title":"7 - Unpersist the accountsDevsDF DataFrame","text":"%spark\n\naccountsDevsDF.unpersist()","user":"anonymous","dateUpdated":"2020-01-13T18:28:30-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177103_905156906","id":"20200113-175727_765797310","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:28-0800","dateFinished":"2020-01-13T18:31:28-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79113"},{"title":"8 - Repersist the same DataFrame, setting the storage level to save the data to files on disk, replicated twice","text":"%spark\n\nimport org.apache.spark.storage.StorageLevel\naccountsDevsDF.persist(StorageLevel.DISK_ONLY_2)","user":"anonymous","dateUpdated":"2020-01-13T18:29:13-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177104_-330366976","id":"20200113-180336_297495668","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:28-0800","dateFinished":"2020-01-13T18:31:29-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79114"},{"title":"9 - Reexecute the previous query","text":"%spark\n\naccountsDevsDF.write.mode(\"overwrite\").save(\"/devsh_loudacre/accounts_devices\")","user":"anonymous","dateUpdated":"2020-01-13T18:29:41-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177105_-1947105888","id":"20200113-180536_198887232","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:29-0800","dateFinished":"2020-01-13T18:31:42-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79115"},{"title":"Additional resources","text":"%md\nWe hope you've enjoyed this lab. Below are additional resources that you should find useful:\n\n1. [Cloudera Tutorials](http://cloudera.com/tutorials.html) are your natural next step where you can explore Spark in more depth.\n2. [Cloudera Community](https://community.cloudera.com) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Apache Spark Documentation](https://spark.apache.org/documentation.html) - official Spark documentation.\n4. [Apache Zeppelin Project Home Page](https://zeppelin.apache.org) - official Zeppelin web site.","user":"anonymous","dateUpdated":"2020-01-13T18:29:58-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":10,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177107_-94662663","id":"20181116-135131_93712280","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:42-0800","dateFinished":"2020-01-13T18:31:42-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79116"},{"text":"%angular\n</br>\n</br>\n</br>\n</br>\n<center>\n<a href=\"https://www.cloudera.com/about/training/courses.html\">\n  <img src=\"https://www.cloudera.com/content/dam/www/marketing/media-kit/logo-assets/cloudera_logo_darkorange.png\" alt=\"Cloudera University\" style=\"width:280px;height:40px;border:0;\" align=\"middle\">\n</a>\n</center>\n</br>\n</br>","user":"anonymous","dateUpdated":"2020-01-13T18:30:01-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":2,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177108_-1406258896","id":"20200110-154537_1406191376","dateCreated":"2020-01-13T18:16:17-0800","dateStarted":"2020-01-13T18:31:43-0800","dateFinished":"2020-01-13T18:31:43-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79117"},{"text":"%angular\n","user":"anonymous","dateUpdated":"2020-01-13T18:16:17-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578968177109_125725062","id":"20200110-162013_302547143","dateCreated":"2020-01-13T18:16:17-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:79118"}],"name":"Labs/Scala/PersistingDataframes","id":"2EY6Q25NB","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"angular:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}
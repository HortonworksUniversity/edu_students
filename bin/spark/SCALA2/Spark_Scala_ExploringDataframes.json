{"paragraphs":[{"text":"%md\n# About This Lab\n**Objective:** In this lab, you will use Zeppelin to work with dataframes\n**File locations:** /home/training/training_materials/devsh/data\n**Successful outcome:**\n**Before you begin:**\n**Related lessons:** Apache Spark Basics\n\n---","user":"anonymous","dateUpdated":"2020-01-11T17:09:41-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>About This Lab</h1>\n<p><strong>Objective:</strong> In this lab, you will use Zeppelin to work with dataframes<br/><strong>File locations:</strong> /home/training/training_materials/devsh/data<br/><strong>Successful outcome:</strong><br/><strong>Before you begin:</strong><br/><strong>Related lessons:</strong> Apache Spark Basics</p>\n<hr/>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673478_-2125278535","id":"20171105-200834_1116095891","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:26-0800","dateFinished":"2020-01-11T17:10:26-0800","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:67933"},{"text":"%md\n# Setup\n---","user":"anonymous","dateUpdated":"2020-01-11T17:09:41-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Setup</h1>\n<hr/>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673481_-2091263879","id":"20181114-164229_902436001","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:26-0800","dateFinished":"2020-01-11T17:10:26-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67934"},{"text":"%sh\nhdfs dfs -rm -f /devsh_loudacre/devices.json","user":"anonymous","dateUpdated":"2020-01-11T17:09:41-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"20/01/11 17:10:28 INFO fs.TrashPolicyDefault: Moved: 'hdfs://localhost.localdomain:8020/devsh_loudacre/devices.json' to trash at: hdfs://localhost.localdomain:8020/user/root/.Trash/Current/devsh_loudacre/devices.json1578791428696\n"}]},"apps":[],"jobName":"paragraph_1578790673482_-744276038","id":"20200111-163356_1852130194","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:26-0800","dateFinished":"2020-01-11T17:10:29-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67935"},{"text":"%md\n# Lab\n---","user":"anonymous","dateUpdated":"2020-01-11T17:09:44-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Lab</h1>\n<hr/>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673484_1965816594","id":"20181114-164844_1661453681","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:29-0800","dateFinished":"2020-01-11T17:10:29-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67936"},{"text":"%md\n## View the Spark Documentation","user":"anonymous","dateUpdated":"2020-01-11T17:09:44-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>View the Spark Documentation</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673486_1488239251","id":"20171105-200519_752831754","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:29-0800","dateFinished":"2020-01-11T17:10:29-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67937"},{"text":"%md\n1. View the Spark documentation in your web browser by visiting [http://spark.apache.org/docs/2.4.0/](http://spark.apache.org/docs/2.4.0/).\n2. From the Programming Guides menu, select SQL, DataFrames, and Datasets. Briefly review the guide and bookmark the page for later reference.\n3. From the API Docs menu, select either Scala or Python, depending on your language preference. Bookmark the API page for use during class. Later exercises will refer to this documentation.\n4. If you are viewing the Scala API, notice that the package names are displayed on the left. Use the search box or scroll down to find the org.apache.spark.sql package. This package contains most of the classes and objects you will be working with in this course. In particular, note the Dataset class. Although this exercise focuses on DataFrames, remember that DataFrames are simply an alias for Datasets of Row objects. So all the DataFrame operations you will practice using in this exercise are documented on the Dataset class.\n5. If you are viewing the Python API, locate the pyspark.sql module. This module contains most of the classes you will be working with in this course. At the top are some of the key classes in the module. View the API for the DataFrame class; these are the operations you will practice using in this exercise.","user":"anonymous","dateUpdated":"2020-01-11T17:09:44-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ol>\n  <li>View the Spark documentation in your web browser by visiting <a href=\"http://spark.apache.org/docs/2.4.0/\">http://spark.apache.org/docs/2.4.0/</a>.</li>\n  <li>From the Programming Guides menu, select SQL, DataFrames, and Datasets. Briefly review the guide and bookmark the page for later reference.</li>\n  <li>From the API Docs menu, select either Scala or Python, depending on your language preference. Bookmark the API page for use during class. Later exercises will refer to this documentation.</li>\n  <li>If you are viewing the Scala API, notice that the package names are displayed on the left. Use the search box or scroll down to find the org.apache.spark.sql package. This package contains most of the classes and objects you will be working with in this course. In particular, note the Dataset class. Although this exercise focuses on DataFrames, remember that DataFrames are simply an alias for Datasets of Row objects. So all the DataFrame operations you will practice using in this exercise are documented on the Dataset class.</li>\n  <li>If you are viewing the Python API, locate the pyspark.sql module. This module contains most of the classes you will be working with in this course. At the top are some of the key classes in the module. View the API for the DataFrame class; these are the operations you will practice using in this exercise.</li>\n</ol>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673487_-1437457892","id":"20181115-084123_1911813743","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:29-0800","dateFinished":"2020-01-11T17:10:29-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67938"},{"text":"%md\n## Read and Display a JSON File","user":"anonymous","dateUpdated":"2020-01-11T17:09:44-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Read and Display a JSON File</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673489_-1961706336","id":"20200111-122228_1360988975","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:29-0800","dateFinished":"2020-01-11T17:10:29-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67939"},{"title":"1 - Review the devices.json file","text":"%sh\n","user":"anonymous","dateUpdated":"2020-01-11T17:09:44-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionSupport":false,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578790673491_-27908138","id":"20171105-200623_656362182","dateCreated":"2020-01-11T16:57:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67940"},{"title":"2 - Upload the data file to the /devsh_loudacre directory in HDFS","text":"%sh","user":"anonymous","dateUpdated":"2020-01-11T17:09:44-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578790673492_509578475","id":"20171105-201709_849284875","dateCreated":"2020-01-11T16:57:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67941"},{"title":"3 - Create a new DataFrame based on the devices.json file in HDFS","text":"%spark","user":"anonymous","dateUpdated":"2020-01-11T17:09:44-0800","config":{"tableHide":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578790673493_-1852491168","id":"20171105-201449_1118165660","dateCreated":"2020-01-11T16:57:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67942"},{"text":"%md\nSpark has not yet read the data in the file, but it has scanned the file to infer the schema. View the schema, and note that the column names match the record field names in the JSON file.","user":"anonymous","dateUpdated":"2020-01-11T17:09:44-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Spark has not yet read the data in the file, but it has scanned the file to infer the schema. View the schema, and note that the column names match the record field names in the JSON file.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673494_-172624610","id":"20200111-135850_551827200","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:29-0800","dateFinished":"2020-01-11T17:10:29-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67943"},{"title":"4 - Print the schema of the new dataframe","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-11T17:09:45-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578790673496_-27115289","id":"20200111-135914_1639147600","dateCreated":"2020-01-11T16:57:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67944"},{"text":"%md\nDisplay the data in the DataFrame using the show function. If you don’t pass an argument to show, Spark will display the first 20 rows in the DataFrame. For this step, display the first five rows. Note that the data is displayed in tabular form, using the column names defined in the schema.","user":"anonymous","dateUpdated":"2020-01-11T17:09:45-0800","config":{"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Display the data in the DataFrame using the show function. If you don’t pass an argument to show, Spark will display the first 20 rows in the DataFrame. For this step, display the first five rows. Note that the data is displayed in tabular form, using the column names defined in the schema.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673497_-205166894","id":"20200111-140906_1219001174","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:29-0800","dateFinished":"2020-01-11T17:10:29-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67945"},{"title":"5 - Display the data of the new dataframe","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-11T17:09:45-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578790673498_-883047538","id":"20200111-140737_1335490660","dateCreated":"2020-01-11T16:57:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67946"},{"text":"%md\nThe show and printSchema operations are actions—that is, they return a value from the distributed DataFrame to the Spark driver. Both functions display the data in a nicely formatted table. These functions are intended for interactive use in the shell, but do not allow you actually work with the data that is returned. Try using the take action instead, which returns an array (Scala) or list (Python) of Row objects. You can display the data by iterating through the collection.","user":"anonymous","dateUpdated":"2020-01-11T17:09:45-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The show and printSchema operations are actions—that is, they return a value from the distributed DataFrame to the Spark driver. Both functions display the data in a nicely formatted table. These functions are intended for interactive use in the shell, but do not allow you actually work with the data that is returned. Try using the take action instead, which returns an array (Scala) or list (Python) of Row objects. You can display the data by iterating through the collection.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673499_818489017","id":"20200111-141212_598289647","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:29-0800","dateFinished":"2020-01-11T17:10:29-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67947"},{"title":"6 - Display the data using an iteration","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-11T17:09:45-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578790673500_1218174110","id":"20200111-141240_53229344","dateCreated":"2020-01-11T16:57:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67948"},{"text":"%md\nIn the Apache Spark interpreter, the zeppelin-context provides a show method, which, using Zeppelin's table feature, can be used to nicely display a Spark DataFrame:\n\n```spark\nval df = spark.read.csv('/path/to/csv')\nz.show(df)\n```\n","user":"anonymous","dateUpdated":"2020-01-11T17:09:45-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>In the Apache Spark interpreter, the zeppelin-context provides a show method, which, using Zeppelin&rsquo;s table feature, can be used to nicely display a Spark DataFrame:</p>\n<pre><code class=\"spark\">val df = spark.read.csv(&#39;/path/to/csv&#39;)\nz.show(df)\n</code></pre>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673501_1328536996","id":"20200111-141625_540405854","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:29-0800","dateFinished":"2020-01-11T17:10:29-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67949"},{"title":"7 - Display the data using the zeppelin context show method","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-11T17:09:45-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578790673502_1727487620","id":"20200111-163004_2121657467","dateCreated":"2020-01-11T16:57:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67950"},{"text":"%md\n## Query a Dataframe","user":"anonymous","dateUpdated":"2020-01-11T17:09:45-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Query a Dataframe</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673503_1464857115","id":"20200111-163610_1311973668","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:30-0800","dateFinished":"2020-01-11T17:10:30-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67951"},{"title":"8 - Count the rows of the dataframe","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-11T17:09:46-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578790673508_-645657881","id":"20200111-163656_483648092","dateCreated":"2020-01-11T16:57:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67952"},{"text":"%md\nDataFrame transformations typically return another DataFrame. Try using a select transformation to return a DataFrame with only the make and model columns, then display its schema. Note that only the selected columns are in the schema.","user":"anonymous","dateUpdated":"2020-01-11T17:09:46-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>DataFrame transformations typically return another DataFrame. Try using a select transformation to return a DataFrame with only the make and model columns, then display its schema. Note that only the selected columns are in the schema.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673509_-1794744551","id":"20200111-163939_417159798","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:30-0800","dateFinished":"2020-01-11T17:10:30-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67953"},{"title":"9 - Create a dataframe with only the make and model columns","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-11T17:09:46-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578790673511_-2060436111","id":"20200111-164018_1558528758","dateCreated":"2020-01-11T16:57:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67954"},{"text":"%md\nA query is a series of one or more transformations followed by an action. Spark does not execute the query until you call the action operation. Display the forst rows of the new dataframe.","user":"anonymous","dateUpdated":"2020-01-11T17:09:46-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>A query is a series of one or more transformations followed by an action. Spark does not execute the query until you call the action operation. Display the forst rows of the new dataframe.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673512_1658820526","id":"20200111-164534_621394130","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:30-0800","dateFinished":"2020-01-11T17:10:30-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67955"},{"title":"10 - View the content of this new dataframe","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-11T17:09:46-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578790673513_-214029509","id":"20200111-164725_1216595747","dateCreated":"2020-01-11T16:57:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67956"},{"text":"%md\nTransformations in a query can be chained together. Execute a single command to show the results of a query using select and where. The resulting DataFrame will contain only the columns devnum, make, and model, and only the rows where the make is Ronin.","user":"anonymous","dateUpdated":"2020-01-11T17:09:46-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Transformations in a query can be chained together. Execute a single command to show the results of a query using select and where. The resulting DataFrame will contain only the columns devnum, make, and model, and only the rows where the make is Ronin.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673514_1445005588","id":"20200111-165124_839388669","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:30-0800","dateFinished":"2020-01-11T17:10:30-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67957"},{"title":"11 - Chain several transformations and an action","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-11T17:09:46-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578790673515_2067138974","id":"20200111-165149_141561983","dateCreated":"2020-01-11T16:57:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67958"},{"text":"%md\n# Result\n**You have now:** explored a single dataframe using simple transformations.\n\n---","user":"anonymous","dateUpdated":"2020-01-11T17:14:26-0800","config":{"tableHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Result</h1>\n<p><strong>You have now:</strong> explored dataframes using simple transformations.</p>\n<hr/>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673516_348251015","id":"20181119-142716_792318228","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:30-0800","dateFinished":"2020-01-11T17:10:30-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67959"},{"text":"%md\n# Solution\n---","user":"anonymous","dateUpdated":"2020-01-11T17:09:47-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Solution</h1>\n<hr/>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673517_1882299291","id":"20171113-155535_1769142099","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:30-0800","dateFinished":"2020-01-11T17:10:30-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67960"},{"title":"1 - Review the devices.json file","text":"%sh\ncat /home/training/training_materials/devsh/data/devices.json","user":"anonymous","dateUpdated":"2020-01-11T17:09:47-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionSupport":false,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"{\"devnum\":1,\"release_dt\":\"2008-10-21T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F00L\",\"dev_type\":\"phone\"}\n{\"devnum\":2,\"release_dt\":\"2010-04-19T00:00:00.000-07:00\",\"make\":\"Titanic\",\"model\":\"2100\",\"dev_type\":\"phone\"}\n{\"devnum\":3,\"release_dt\":\"2011-02-18T00:00:00.000-08:00\",\"make\":\"MeeToo\",\"model\":\"3.0\",\"dev_type\":\"phone\"}\n{\"devnum\":4,\"release_dt\":\"2011-09-21T00:00:00.000-07:00\",\"make\":\"MeeToo\",\"model\":\"3.1\",\"dev_type\":\"phone\"}\n{\"devnum\":5,\"release_dt\":\"2008-10-21T00:00:00.000-07:00\",\"make\":\"iFruit\",\"model\":\"1\",\"dev_type\":\"phone\"}\n{\"devnum\":6,\"release_dt\":\"2011-11-02T00:00:00.000-07:00\",\"make\":\"iFruit\",\"model\":\"3\",\"dev_type\":\"phone\"}\n{\"devnum\":7,\"release_dt\":\"2010-05-20T00:00:00.000-07:00\",\"make\":\"iFruit\",\"model\":\"2\",\"dev_type\":\"phone\"}\n{\"devnum\":8,\"release_dt\":\"2013-07-02T00:00:00.000-07:00\",\"make\":\"iFruit\",\"model\":\"5\",\"dev_type\":\"phone\"}\n{\"devnum\":9,\"release_dt\":\"2008-10-21T00:00:00.000-07:00\",\"make\":\"Titanic\",\"model\":\"1000\",\"dev_type\":\"phone\"}\n{\"devnum\":10,\"release_dt\":\"2008-10-21T00:00:00.000-07:00\",\"make\":\"MeeToo\",\"model\":\"1.0\",\"dev_type\":\"phone\"}\n{\"devnum\":11,\"release_dt\":\"2011-02-28T00:00:00.000-08:00\",\"make\":\"Sorrento\",\"model\":\"F21L\",\"dev_type\":\"phone\"}\n{\"devnum\":12,\"release_dt\":\"2012-10-25T00:00:00.000-07:00\",\"make\":\"iFruit\",\"model\":\"4\",\"dev_type\":\"phone\"}\n{\"devnum\":13,\"release_dt\":\"2011-11-21T00:00:00.000-08:00\",\"make\":\"Sorrento\",\"model\":\"F23L\",\"dev_type\":\"phone\"}\n{\"devnum\":14,\"release_dt\":\"2010-05-25T00:00:00.000-07:00\",\"make\":\"Titanic\",\"model\":\"2200\",\"dev_type\":\"phone\"}\n{\"devnum\":15,\"release_dt\":\"2010-06-20T00:00:00.000-07:00\",\"make\":\"Ronin\",\"model\":\"Novelty Note 1\",\"dev_type\":\"phone\"}\n{\"devnum\":16,\"release_dt\":\"2012-07-21T00:00:00.000-07:00\",\"make\":\"Titanic\",\"model\":\"2500\",\"dev_type\":\"phone\"}\n{\"devnum\":17,\"release_dt\":\"2013-04-11T00:00:00.000-07:00\",\"make\":\"Ronin\",\"model\":\"Novelty Note 3\",\"dev_type\":\"phone\"}\n{\"devnum\":18,\"release_dt\":\"2011-10-02T00:00:00.000-07:00\",\"make\":\"Ronin\",\"model\":\"Novelty Note 2\",\"dev_type\":\"phone\"}\n{\"devnum\":19,\"release_dt\":\"2013-07-02T00:00:00.000-07:00\",\"make\":\"Ronin\",\"model\":\"Novelty Note 4\",\"dev_type\":\"phone\"}\n{\"devnum\":20,\"release_dt\":\"2012-07-21T00:00:00.000-07:00\",\"make\":\"iFruit\",\"model\":\"3A\",\"dev_type\":\"phone\"}\n{\"devnum\":21,\"release_dt\":\"2011-02-18T00:00:00.000-08:00\",\"make\":\"Titanic\",\"model\":\"2300\",\"dev_type\":\"phone\"}\n{\"devnum\":22,\"release_dt\":\"2012-03-12T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F24L\",\"dev_type\":\"phone\"}\n{\"devnum\":23,\"release_dt\":\"2010-11-01T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F20L\",\"dev_type\":\"phone\"}\n{\"devnum\":24,\"release_dt\":\"2012-10-21T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F32L\",\"dev_type\":\"phone\"}\n{\"devnum\":25,\"release_dt\":\"2011-10-01T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F22L\",\"dev_type\":\"phone\"}\n{\"devnum\":26,\"release_dt\":\"2012-06-21T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F30L\",\"dev_type\":\"phone\"}\n{\"devnum\":27,\"release_dt\":\"2009-10-25T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F10L\",\"dev_type\":\"phone\"}\n{\"devnum\":28,\"release_dt\":\"2012-09-21T00:00:00.000-07:00\",\"make\":\"Titanic\",\"model\":\"4000\",\"dev_type\":\"phone\"}\n{\"devnum\":29,\"release_dt\":\"2013-11-01T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F41L\",\"dev_type\":\"phone\"}\n{\"devnum\":30,\"release_dt\":\"2013-08-01T00:00:00.000-07:00\",\"make\":\"Titanic\",\"model\":\"DeckChairs\",\"dev_type\":\"phone\"}\n{\"devnum\":31,\"release_dt\":\"2012-08-04T00:00:00.000-07:00\",\"make\":\"MeeToo\",\"model\":\"4.1\",\"dev_type\":\"phone\"}\n{\"devnum\":32,\"release_dt\":\"2012-07-21T00:00:00.000-07:00\",\"make\":\"MeeToo\",\"model\":\"4.0\",\"dev_type\":\"phone\"}\n{\"devnum\":33,\"release_dt\":\"2010-05-15T00:00:00.000-07:00\",\"make\":\"MeeToo\",\"model\":\"2.0\",\"dev_type\":\"phone\"}\n{\"devnum\":34,\"release_dt\":\"2009-12-21T00:00:00.000-08:00\",\"make\":\"Titanic\",\"model\":\"2000\",\"dev_type\":\"phone\"}\n{\"devnum\":35,\"release_dt\":\"2012-09-21T00:00:00.000-07:00\",\"make\":\"MeeToo\",\"model\":\"5.0\",\"dev_type\":\"phone\"}\n{\"devnum\":36,\"release_dt\":\"2013-08-01T00:00:00.000-07:00\",\"make\":\"MeeToo\",\"model\":\"5.1\",\"dev_type\":\"phone\"}\n{\"devnum\":37,\"release_dt\":\"2012-08-04T00:00:00.000-07:00\",\"make\":\"Titanic\",\"model\":\"3000\",\"dev_type\":\"phone\"}\n{\"devnum\":38,\"release_dt\":\"2008-11-25T00:00:00.000-08:00\",\"make\":\"Titanic\",\"model\":\"1100\",\"dev_type\":\"phone\"}\n{\"devnum\":39,\"release_dt\":\"2013-03-11T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F33L\",\"dev_type\":\"phone\"}\n{\"devnum\":40,\"release_dt\":\"2013-02-11T00:00:00.000-08:00\",\"make\":\"iFruit\",\"model\":\"4A\",\"dev_type\":\"phone\"}\n{\"devnum\":41,\"release_dt\":\"2012-07-04T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F31L\",\"dev_type\":\"phone\"}\n{\"devnum\":42,\"release_dt\":\"2013-06-26T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F40L\",\"dev_type\":\"phone\"}\n{\"devnum\":43,\"release_dt\":\"2009-03-11T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F01L\",\"dev_type\":\"phone\"}\n{\"devnum\":44,\"release_dt\":\"2010-04-10T00:00:00.000-07:00\",\"make\":\"Sorrento\",\"model\":\"F11L\",\"dev_type\":\"phone\"}\n{\"devnum\":45,\"release_dt\":\"2011-09-21T00:00:00.000-07:00\",\"make\":\"Titanic\",\"model\":\"2400\",\"dev_type\":\"phone\"}\n{\"devnum\":46,\"release_dt\":\"2013-10-02T00:00:00.000-07:00\",\"make\":\"Ronin\",\"model\":\"S4\",\"dev_type\":\"phone\"}\n{\"devnum\":47,\"release_dt\":\"2010-05-20T00:00:00.000-07:00\",\"make\":\"Ronin\",\"model\":\"S1\",\"dev_type\":\"phone\"}\n{\"devnum\":48,\"release_dt\":\"2013-02-11T00:00:00.000-08:00\",\"make\":\"Ronin\",\"model\":\"S3\",\"dev_type\":\"phone\"}\n{\"devnum\":49,\"release_dt\":\"2012-07-21T00:00:00.000-07:00\",\"make\":\"Ronin\",\"model\":\"S2\",\"dev_type\":\"phone\"}\n{\"devnum\":50,\"release_dt\":\"2013-10-02T00:00:00.000-07:00\",\"make\":\"iFruit\",\"model\":\"5A\",\"dev_type\":\"phone\"}\n"}]},"apps":[],"jobName":"paragraph_1578790673519_-126553530","id":"20200111-123005_1525915571","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:30-0800","dateFinished":"2020-01-11T17:10:30-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67961"},{"title":"2 - Upload the data file to the /devsh_loudacre directory in HDFS","text":"%sh\nhdfs dfs -put /home/training/training_materials/devsh/data/devices.json /devsh_loudacre","user":"anonymous","dateUpdated":"2020-01-11T17:09:47-0800","config":{"tableHide":false,"editorSetting":{"language":"sh","editOnDblClick":false,"completionSupport":false,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/sh","editorHide":false,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1578790673521_611010733","id":"20200111-123604_463190353","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:30-0800","dateFinished":"2020-01-11T17:10:33-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67962"},{"title":"3 - Create a new DataFrame based on the devices.json file in HDFS","text":"%spark\nval devDF = spark.read.json(\"/devsh_loudacre/devices.json\")","user":"anonymous","dateUpdated":"2020-01-11T17:09:50-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"devDF: org.apache.spark.sql.DataFrame = [dev_type: string, devnum: bigint ... 3 more fields]\n"}]},"apps":[],"jobName":"paragraph_1578790673522_-1849292033","id":"20200111-124018_1365794443","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:33-0800","dateFinished":"2020-01-11T17:10:33-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67963"},{"title":"4 - Print the schema of the new dataframe","text":"%spark\ndevDF.printSchema()","user":"anonymous","dateUpdated":"2020-01-11T17:09:58-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- dev_type: string (nullable = true)\n |-- devnum: long (nullable = true)\n |-- make: string (nullable = true)\n |-- model: string (nullable = true)\n |-- release_dt: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1578790673523_-794531208","id":"20200111-140004_1737621071","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:33-0800","dateFinished":"2020-01-11T17:10:34-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67964"},{"title":"5 - Display the data of the new dataframe","text":"%spark\ndevDF.show(5)","user":"anonymous","dateUpdated":"2020-01-11T17:09:58-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------+------+--------+-----+--------------------+\n|dev_type|devnum|    make|model|          release_dt|\n+--------+------+--------+-----+--------------------+\n|   phone|     1|Sorrento| F00L|2008-10-21T00:00:...|\n|   phone|     2| Titanic| 2100|2010-04-19T00:00:...|\n|   phone|     3|  MeeToo|  3.0|2011-02-18T00:00:...|\n|   phone|     4|  MeeToo|  3.1|2011-09-21T00:00:...|\n|   phone|     5|  iFruit|    1|2008-10-21T00:00:...|\n+--------+------+--------+-----+--------------------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1578790673525_1059776760","id":"20200111-140953_499550289","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:34-0800","dateFinished":"2020-01-11T17:10:34-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67965"},{"title":"6- Display the data using an iteration","text":"%spark\nval rows = devDF.take(5)\nrows.foreach(println)","user":"anonymous","dateUpdated":"2020-01-11T17:09:59-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[phone,1,Sorrento,F00L,2008-10-21T00:00:00.000-07:00]\n[phone,2,Titanic,2100,2010-04-19T00:00:00.000-07:00]\n[phone,3,MeeToo,3.0,2011-02-18T00:00:00.000-08:00]\n[phone,4,MeeToo,3.1,2011-09-21T00:00:00.000-07:00]\n[phone,5,iFruit,1,2008-10-21T00:00:00.000-07:00]\nrows: Array[org.apache.spark.sql.Row] = Array([phone,1,Sorrento,F00L,2008-10-21T00:00:00.000-07:00], [phone,2,Titanic,2100,2010-04-19T00:00:00.000-07:00], [phone,3,MeeToo,3.0,2011-02-18T00:00:00.000-08:00], [phone,4,MeeToo,3.1,2011-09-21T00:00:00.000-07:00], [phone,5,iFruit,1,2008-10-21T00:00:00.000-07:00])\n"}]},"apps":[],"jobName":"paragraph_1578790673526_-726296673","id":"20200111-141357_1484033904","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:34-0800","dateFinished":"2020-01-11T17:10:34-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67966"},{"title":"7 - Display the data using the zeppelin context show method","text":"%spark\n\nz.show(devDF)\n","user":"anonymous","dateUpdated":"2020-01-11T17:09:59-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"dev_type":"string","devnum":"string","make":"string","model":"string","release_dt":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dev_type\tdevnum\tmake\tmodel\trelease_dt\nphone\t1\tSorrento\tF00L\t2008-10-21T00:00:00.000-07:00\nphone\t2\tTitanic\t2100\t2010-04-19T00:00:00.000-07:00\nphone\t3\tMeeToo\t3.0\t2011-02-18T00:00:00.000-08:00\nphone\t4\tMeeToo\t3.1\t2011-09-21T00:00:00.000-07:00\nphone\t5\tiFruit\t1\t2008-10-21T00:00:00.000-07:00\nphone\t6\tiFruit\t3\t2011-11-02T00:00:00.000-07:00\nphone\t7\tiFruit\t2\t2010-05-20T00:00:00.000-07:00\nphone\t8\tiFruit\t5\t2013-07-02T00:00:00.000-07:00\nphone\t9\tTitanic\t1000\t2008-10-21T00:00:00.000-07:00\nphone\t10\tMeeToo\t1.0\t2008-10-21T00:00:00.000-07:00\nphone\t11\tSorrento\tF21L\t2011-02-28T00:00:00.000-08:00\nphone\t12\tiFruit\t4\t2012-10-25T00:00:00.000-07:00\nphone\t13\tSorrento\tF23L\t2011-11-21T00:00:00.000-08:00\nphone\t14\tTitanic\t2200\t2010-05-25T00:00:00.000-07:00\nphone\t15\tRonin\tNovelty Note 1\t2010-06-20T00:00:00.000-07:00\nphone\t16\tTitanic\t2500\t2012-07-21T00:00:00.000-07:00\nphone\t17\tRonin\tNovelty Note 3\t2013-04-11T00:00:00.000-07:00\nphone\t18\tRonin\tNovelty Note 2\t2011-10-02T00:00:00.000-07:00\nphone\t19\tRonin\tNovelty Note 4\t2013-07-02T00:00:00.000-07:00\nphone\t20\tiFruit\t3A\t2012-07-21T00:00:00.000-07:00\nphone\t21\tTitanic\t2300\t2011-02-18T00:00:00.000-08:00\nphone\t22\tSorrento\tF24L\t2012-03-12T00:00:00.000-07:00\nphone\t23\tSorrento\tF20L\t2010-11-01T00:00:00.000-07:00\nphone\t24\tSorrento\tF32L\t2012-10-21T00:00:00.000-07:00\nphone\t25\tSorrento\tF22L\t2011-10-01T00:00:00.000-07:00\nphone\t26\tSorrento\tF30L\t2012-06-21T00:00:00.000-07:00\nphone\t27\tSorrento\tF10L\t2009-10-25T00:00:00.000-07:00\nphone\t28\tTitanic\t4000\t2012-09-21T00:00:00.000-07:00\nphone\t29\tSorrento\tF41L\t2013-11-01T00:00:00.000-07:00\nphone\t30\tTitanic\tDeckChairs\t2013-08-01T00:00:00.000-07:00\nphone\t31\tMeeToo\t4.1\t2012-08-04T00:00:00.000-07:00\nphone\t32\tMeeToo\t4.0\t2012-07-21T00:00:00.000-07:00\nphone\t33\tMeeToo\t2.0\t2010-05-15T00:00:00.000-07:00\nphone\t34\tTitanic\t2000\t2009-12-21T00:00:00.000-08:00\nphone\t35\tMeeToo\t5.0\t2012-09-21T00:00:00.000-07:00\nphone\t36\tMeeToo\t5.1\t2013-08-01T00:00:00.000-07:00\nphone\t37\tTitanic\t3000\t2012-08-04T00:00:00.000-07:00\nphone\t38\tTitanic\t1100\t2008-11-25T00:00:00.000-08:00\nphone\t39\tSorrento\tF33L\t2013-03-11T00:00:00.000-07:00\nphone\t40\tiFruit\t4A\t2013-02-11T00:00:00.000-08:00\nphone\t41\tSorrento\tF31L\t2012-07-04T00:00:00.000-07:00\nphone\t42\tSorrento\tF40L\t2013-06-26T00:00:00.000-07:00\nphone\t43\tSorrento\tF01L\t2009-03-11T00:00:00.000-07:00\nphone\t44\tSorrento\tF11L\t2010-04-10T00:00:00.000-07:00\nphone\t45\tTitanic\t2400\t2011-09-21T00:00:00.000-07:00\nphone\t46\tRonin\tS4\t2013-10-02T00:00:00.000-07:00\nphone\t47\tRonin\tS1\t2010-05-20T00:00:00.000-07:00\nphone\t48\tRonin\tS3\t2013-02-11T00:00:00.000-08:00\nphone\t49\tRonin\tS2\t2012-07-21T00:00:00.000-07:00\nphone\t50\tiFruit\t5A\t2013-10-02T00:00:00.000-07:00\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1578790673527_-478261321","id":"20200111-163121_389544647","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:34-0800","dateFinished":"2020-01-11T17:10:35-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67967"},{"title":"8 - Count the rows of the dataframe","text":"%spark\n\ndevDF.count","user":"anonymous","dateUpdated":"2020-01-11T17:10:00-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res21: Long = 50\n"}]},"apps":[],"jobName":"paragraph_1578790673529_-1488791994","id":"20200111-163831_1875186973","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:35-0800","dateFinished":"2020-01-11T17:10:35-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67968"},{"title":"9 - Create a dataframe with only the make and model columns","text":"%spark\n\nval makeModelDF = devDF.select(\"make\",\"model\")\nmakeModelDF.printSchema","user":"anonymous","dateUpdated":"2020-01-11T17:10:01-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- make: string (nullable = true)\n |-- model: string (nullable = true)\n\nmakeModelDF: org.apache.spark.sql.DataFrame = [make: string, model: string]\n"}]},"apps":[],"jobName":"paragraph_1578790673530_-1860853926","id":"20200111-164146_2093325511","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:35-0800","dateFinished":"2020-01-11T17:10:35-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67969"},{"title":"10 - View the content of this new dataframe","text":"%spark\n\nz.show(makeModelDF)","user":"anonymous","dateUpdated":"2020-01-11T17:10:01-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"make":"string","model":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"make\tmodel\nSorrento\tF00L\nTitanic\t2100\nMeeToo\t3.0\nMeeToo\t3.1\niFruit\t1\niFruit\t3\niFruit\t2\niFruit\t5\nTitanic\t1000\nMeeToo\t1.0\nSorrento\tF21L\niFruit\t4\nSorrento\tF23L\nTitanic\t2200\nRonin\tNovelty Note 1\nTitanic\t2500\nRonin\tNovelty Note 3\nRonin\tNovelty Note 2\nRonin\tNovelty Note 4\niFruit\t3A\nTitanic\t2300\nSorrento\tF24L\nSorrento\tF20L\nSorrento\tF32L\nSorrento\tF22L\nSorrento\tF30L\nSorrento\tF10L\nTitanic\t4000\nSorrento\tF41L\nTitanic\tDeckChairs\nMeeToo\t4.1\nMeeToo\t4.0\nMeeToo\t2.0\nTitanic\t2000\nMeeToo\t5.0\nMeeToo\t5.1\nTitanic\t3000\nTitanic\t1100\nSorrento\tF33L\niFruit\t4A\nSorrento\tF31L\nSorrento\tF40L\nSorrento\tF01L\nSorrento\tF11L\nTitanic\t2400\nRonin\tS4\nRonin\tS1\nRonin\tS3\nRonin\tS2\niFruit\t5A\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1578790673531_820725400","id":"20200111-164907_1112294231","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:35-0800","dateFinished":"2020-01-11T17:10:36-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67970"},{"title":"11 - Chain several transformations and an action","text":"%spark\n\nz.show(devDF.select(\"devnum\",\"make\",\"model\").where(\"make = 'Ronin'\"))","user":"anonymous","dateUpdated":"2020-01-11T17:10:01-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"devnum":"string","make":"string","model":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"devnum\tmake\tmodel\n15\tRonin\tNovelty Note 1\n17\tRonin\tNovelty Note 3\n18\tRonin\tNovelty Note 2\n19\tRonin\tNovelty Note 4\n46\tRonin\tS4\n47\tRonin\tS1\n48\tRonin\tS3\n49\tRonin\tS2\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1578790673533_-727478109","id":"20200111-165319_156372582","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:36-0800","dateFinished":"2020-01-11T17:10:36-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67971"},{"title":"Additional resources","text":"%md\nWe hope you've enjoyed this lab. Below are additional resources that you should find useful:\n\n1. [Cloudera Tutorials](http://cloudera.com/tutorials.html) are your natural next step where you can explore Spark in more depth.\n2. [Cloudera Community](https://community.cloudera.com) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Apache Spark Documentation](https://spark.apache.org/documentation.html) - official Spark documentation.\n4. [Apache Zeppelin Project Home Page](https://zeppelin.apache.org) - official Zeppelin web site.","user":"anonymous","dateUpdated":"2020-01-11T17:10:02-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":10,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>We hope you&rsquo;ve enjoyed this lab. Below are additional resources that you should find useful:</p>\n<ol>\n  <li><a href=\"http://cloudera.com/tutorials.html\">Cloudera Tutorials</a> are your natural next step where you can explore Spark in more depth.</li>\n  <li><a href=\"https://community.cloudera.com\">Cloudera Community</a> is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.</li>\n  <li><a href=\"https://spark.apache.org/documentation.html\">Apache Spark Documentation</a> - official Spark documentation.</li>\n  <li><a href=\"https://zeppelin.apache.org\">Apache Zeppelin Project Home Page</a> - official Zeppelin web site.</li>\n</ol>\n</div>"}]},"apps":[],"jobName":"paragraph_1578790673534_-669540562","id":"20181116-135131_93712280","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:36-0800","dateFinished":"2020-01-11T17:10:36-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67972"},{"text":"%angular\n</br>\n</br>\n</br>\n</br>\n<center>\n<a href=\"https://www.cloudera.com/about/training/courses.html\">\n  <img src=\"https://www.cloudera.com/content/dam/www/marketing/media-kit/logo-assets/cloudera_logo_darkorange.png\" alt=\"Cloudera Educational Services\" style=\"width:280px;height:40px;border:0;\" align=\"middle\">\n</a>\n</center>\n</br>\n</br>","user":"anonymous","dateUpdated":"2020-01-11T17:10:02-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":2,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"</br>\n</br>\n</br>\n</br>\n<center>\n<a href=\"https://www.cloudera.com/about/training/courses.html\">\n  <img src=\"https://www.cloudera.com/content/dam/www/marketing/media-kit/logo-assets/cloudera_logo_darkorange.png\" alt=\"Cloudera Educational Services\" style=\"width:280px;height:40px;border:0;\" align=\"middle\">\n</a>\n</center>\n</br>\n</br>"}]},"apps":[],"jobName":"paragraph_1578790673536_1104626010","id":"20200110-154537_1406191376","dateCreated":"2020-01-11T16:57:53-0800","dateStarted":"2020-01-11T17:10:36-0800","dateFinished":"2020-01-11T17:10:36-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:67973"},{"text":"%angular\n","user":"anonymous","dateUpdated":"2020-01-11T17:10:02-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578790673537_1513241737","id":"20200110-162013_302547143","dateCreated":"2020-01-11T16:57:53-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:67974"}],"name":"Labs/Scala/ExploringDataframes","id":"2EZHUHHXX","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"angular:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}
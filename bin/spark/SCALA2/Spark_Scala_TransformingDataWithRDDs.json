{"paragraphs":[{"text":"%md\n# About This Lab\n**Objective:** Explore RDDs tranformations\n**File locations:** /home/training/training_materials/devsh/data\n**Successful outcome:**\n**Before you begin:**\n**Related lessons:** Transforming Data with RDDs\n\n---","user":"anonymous","dateUpdated":"2020-01-20T03:41:16-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520413982_-957481492","id":"20171105-200834_1116095891","dateCreated":"2020-01-20T03:40:13-0800","dateStarted":"2020-01-20T06:22:51-0800","dateFinished":"2020-01-20T06:22:51-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:28969"},{"text":"%md\n# Setup\n---\nThe following cells ensure that this notebook can run from top to bottom without errors any number of times.","user":"anonymous","dateUpdated":"2020-01-20T03:41:22-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520413985_-92610799","id":"20181114-164229_902436001","dateCreated":"2020-01-20T03:40:13-0800","dateStarted":"2020-01-20T06:22:51-0800","dateFinished":"2020-01-20T06:22:51-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28970"},{"text":"%sh\n\nhdfs dfs -rm -r -f /devsh_loudacre/weblogs\nhdfs dfs -rm -r -f /devsh_loudacre/iplist\nhdfs dfs -rm -r -f /devsh_loudacre/userips_csv\nhdfs dfs -rm -r -f /devsh_loudacre/devicestatus.txt\nhdfs dfs -rm -r -f /devsh_loudacre/devicestatus_etl\nhdfs dfs -rm -r -f /devsh_loudacre/activations\nhdfs dfs -rm -r -f /devsh_loudacre/account-models","user":"anonymous","dateUpdated":"2020-01-20T03:41:29-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520413986_1718378824","id":"20200120-002654_545000747","dateCreated":"2020-01-20T03:40:13-0800","dateStarted":"2020-01-20T06:22:51-0800","dateFinished":"2020-01-20T06:23:07-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28971"},{"text":"%md\n# Lab\n---","user":"anonymous","dateUpdated":"2020-01-20T03:41:52-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520413989_-651105947","id":"20181114-164844_1661453681","dateCreated":"2020-01-20T03:40:13-0800","dateStarted":"2020-01-20T06:23:07-0800","dateFinished":"2020-01-20T06:23:07-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28972"},{"text":"%md\nIn this section you will be using data in /home/training/training_materials/devsh/data/weblogs. \nReview one of the .log files in the directory. \nNote the format of the lines and the poistions of the IP address, the user ID and the request:\n```spark\n234.206.18.239 - 8495 [15/Mar/2014:23:59:30 +0100] \"GET /KBDOC-00082.html HTTP/1.0\" 200 9054 \"http://www.loudacre.com\"  \"Loudacre Mobile Browser Titanic 2200\"\n```","user":"anonymous","dateUpdated":"2020-01-20T03:42:18-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520413990_-1686992319","id":"20200120-001407_100530890","dateCreated":"2020-01-20T03:40:13-0800","dateStarted":"2020-01-20T06:23:07-0800","dateFinished":"2020-01-20T06:23:07-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28973"},{"title":"1 - Copy the weblogs directory from the local filesystem to the /devsh_loudacre HDFS directory","text":"%sh\n","user":"anonymous","dateUpdated":"2020-01-20T03:42:25-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520413993_1327336257","id":"20200120-002607_2067603572","dateCreated":"2020-01-20T03:40:13-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28974"},{"title":"2 - Create an RDD from the uploaded web logs data files in the /devsh_loudacre/weblogs/ directory in HDFS","text":"%spark","user":"anonymous","dateUpdated":"2020-01-20T03:42:46-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520413995_1436065259","id":"20200120-003044_121938297","dateCreated":"2020-01-20T03:40:13-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28975"},{"text":"%md\nCreate an RDD containing only lines that are requests for JPG files. \nUse the filter operation with a transformation function that takes a string RDD element and returns a boolean value.","user":"anonymous","dateUpdated":"2020-01-20T03:42:55-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520413998_-17154145","id":"20200120-003443_338001548","dateCreated":"2020-01-20T03:40:13-0800","dateStarted":"2020-01-20T06:23:07-0800","dateFinished":"2020-01-20T06:23:07-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28976"},{"title":"3 - Create an RDD containing only lines that are requests for JPG files","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T03:43:51-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414000_-1712826269","id":"20200120-003439_334088836","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28977"},{"text":"%md\nUse take to return the first five lines of the data in jpglogsRDD.\nThe return value is a list of strings (in Python) or array of strings (in Scala).","user":"anonymous","dateUpdated":"2020-01-20T03:43:58-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414002_4660992","id":"20200120-003633_103234036","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:07-0800","dateFinished":"2020-01-20T06:23:07-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28978"},{"title":"4 - Use take to return the first five lines of the data in jpglogsRDD","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T03:44:18-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414004_-1632001478","id":"20200120-003630_1845260069","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28979"},{"title":"5 - Loop through and display the strings returned by take","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-20T03:44:31-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414006_-2013676194","id":"20200120-003817_1470333727","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28980"},{"text":"%md\nUse the map transformation to define a new RDD. \nStart with a simple map function that returns the length of each line in the log file. \nThis results in an RDD of integers.","user":"anonymous","dateUpdated":"2020-01-20T03:44:39-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414008_-1156975460","id":"20200120-004513_1072563827","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:07-0800","dateFinished":"2020-01-20T06:23:07-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28981"},{"title":"6 - Use the map transformation to define a new RDD","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-20T03:45:01-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414010_-371573831","id":"20200120-003816_106556924","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28982"},{"title":"7 - Loop through and display the first five elements (integers) in the RDD","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T03:46:21-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414012_-1298556142","id":"20200120-005134_1951982341","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28983"},{"text":"%md\nCalculating line lengths is not very useful.\nInstead, try mapping each string in logsRDD by splitting the strings based on spaces.\nThe result will be an RDD in which each element is a list of strings (in Python) or an array of strings (in Scala).\nEach string represents a “field” in the weblog line.","user":"anonymous","dateUpdated":"2020-01-20T03:46:35-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414014_1234670398","id":"20200120-005426_237657710","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:07-0800","dateFinished":"2020-01-20T06:23:07-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28984"},{"title":"8 - Create an RDD with all the fields in the weblogs","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T03:46:52-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414016_-511070600","id":"20200120-005423_362634952","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28985"},{"text":"%md\nReturn the first five elements of lineFieldsRDD.\nThe result will be a list of lists of strings (in Python) or an array of arrays of strings (in Scala).","user":"anonymous","dateUpdated":"2020-01-20T03:47:11-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414018_1192894120","id":"20200120-011118_1388715961","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:07-0800","dateFinished":"2020-01-20T06:23:07-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28986"},{"title":"9 - Return the first five elements of lineFieldsRDD","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T03:47:25-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414020_-336541600","id":"20200120-011116_592343431","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28987"},{"text":"%md\nDisplay the contents of the return from take. \nUnlike in examples above, which returned collections of simple values (strings and ints), this time you have a set of compound values (arrays or lists containing strings).\nTherefore, to display them properly, you will need to loop through the arrays/lists in lineFields, and then loop through each string in the array/list.\nTo make it easier to read the output, use ------- to separate each set of field values.\nIf you choose to copy and paste the Pyspark code below, it may not automatically indent properly; be sure the indentation is correct before executing the command.\n\n```spark\nfor fields in lineFields: \n    print \"-------\"\n    for field in fields: print field\n```","user":"anonymous","dateUpdated":"2020-01-20T03:47:38-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414022_1360595346","id":"20200120-011443_2110736945","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:07-0800","dateFinished":"2020-01-20T06:23:07-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28988"},{"title":"10  - Display the contents of the return from take","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T03:47:57-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414024_1044866970","id":"20200120-011952_1094164574","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28989"},{"text":"%md\nNow that you know how map works, create a new RDD containing just the IP addresses from each line in the log file.\n(The IP address is the first space-delimited field in each line.)","user":"anonymous","dateUpdated":"2020-01-20T03:48:02-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414026_758069288","id":"20200120-012127_564830964","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:08-0800","dateFinished":"2020-01-20T06:23:08-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28990"},{"title":"11 - Create a new RDD containing just the IP addresses from each line in the log file","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T03:48:42-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414028_-1429807513","id":"20200120-012107_1817300829","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28991"},{"title":"12 - Finally, save the list of IP addresses as a text file","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-20T05:06:28-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414030_-982364255","id":"20200120-014121_1097860708","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28992"},{"text":"%md\n* **Note:** If you re-run this command, you will not be able to save to the same directory because it already exists. \nBe sure to delete the directory in HDFS before saving again.","user":"anonymous","dateUpdated":"2020-01-20T05:07:11-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414032_-71197648","id":"20200120-014229_413886056","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:08-0800","dateFinished":"2020-01-20T06:23:08-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28993"},{"text":"%md\nList the contents of the /devsh_loudacre/iplist HDFS folder. \nReview the contents of one of the files to confirm that they were created correctly.","user":"anonymous","dateUpdated":"2020-01-20T05:07:16-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414034_-1580696477","id":"20200120-014333_1539770074","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:08-0800","dateFinished":"2020-01-20T06:23:08-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28994"},{"title":"13 - Confirm the files were created correctly","text":"%sh\n\n","user":"anonymous","dateUpdated":"2020-01-20T05:08:08-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414037_1678858367","id":"20200120-014756_280265899","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28995"},{"text":"%md\n### Map Weblog Entries to IP Address/User ID Pairs\n\nUse RDD transformations to create a dataset consisting of the IP address and corresponding user ID for each request for an HTML file.\n(Filter for files with the .html extension; disregard requests for other file types.)\nThe user ID is the third field in each log file line. \nSave the data into a comma-separated text file in the directory /devsh_loudacre/userips_csv. \nMake sure the data is saved in the form of comma-separated strings:\n```spark\n165.32.101.206,8\n100.219.90.44,102\n182.4.148.56,173 \n246.241.6.175,45395 \n175.223.172.207,4115\n...\n```","user":"anonymous","dateUpdated":"2020-01-20T05:11:12-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414039_-265706310","id":"20200120-015000_1493350475","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:08-0800","dateFinished":"2020-01-20T06:23:08-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28996"},{"title":"14 - Create a dataset consisting of the IP address and corresponding user ID for each request for an HTML file","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T05:11:30-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414041_-1740112917","id":"20200120-015332_367658291","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28997"},{"text":"%md\nNow that the data is in CSV format, it can easily be used by Spark SQL. ","user":"anonymous","dateUpdated":"2020-01-20T05:11:34-0800","config":{"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414043_-1754596435","id":"20200120-020340_581649922","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:08-0800","dateFinished":"2020-01-20T06:23:08-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28998"},{"title":"15 - Load the new CSV files in /devsh_loudacre/userips_csv created above into a DataFrame, then view the data and schema","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-20T05:11:46-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414045_832035048","id":"20200120-020334_593860337","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:28999"},{"text":"%md\n### Bonus Exercise 1: Clean Device Status Data\nIf you have more time, attempt this extra bonus exercise.\nOne common use of core Spark RDDs is data scrubbing—converting the data into a format that can be used in Spark SQL.\nIn this bonus exercise, you will process data in order to get it into a standardized format for later processing.\nReview the contents of the file /home/trainingtraining_materials/devsh/data/devicestatus.txt. \nThis file contains data collected from mobile devices on Loudacre’s network, including device ID, current status, location, and so on. \nBecause Loudacre previously acquired other mobile providers’ networks, the data from different subnetworks has different formats. \nNote that the records in this file have different field delimiters: some use commas, some use pipes (|), and so on. \n```pyspark\n2014-03-15:10:10:33,Ronin S2,1a7eca8d-60c9-4d25-8609-d6cfd1ac80a1,0,24,82,72,enabled,enabled,enabled,41,62,36.49259162,-121.003629078\n2014-03-15:10:10:33/Titanic 2300/d86dbb9d-ff3c-40c6-8685-01f1fac45d9f/59/83/9/3/28/0/enabled/disabled/enabled/34.3456792864/-117.768326105\n```\n\n\nYour task is the following:","user":"anonymous","dateUpdated":"2020-01-20T05:12:23-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414049_1092541292","id":"20200120-021127_1045532948","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:08-0800","dateFinished":"2020-01-20T06:23:08-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29000"},{"title":"16 - Upload the devicestatus.txt file to HDFS","text":"%sh\n\n","user":"anonymous","dateUpdated":"2020-01-20T05:12:35-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414051_852377510","id":"20200120-021126_2118624277","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29001"},{"text":"%md\nIn order to clean up  the data, you will have to perform the following tasks:\n\n* Determine which delimiter to use (the 20th character—position 19—is the first use of the delimiter).\n* Filter out any records which do not parse correctly (hint: each record should have exactly 14 values).\n* Extract the date (first field), model (second field), device ID (third field), and latitude and longitude (13th and 14th fields respectively).","user":"anonymous","dateUpdated":"2020-01-20T05:13:54-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414053_2126113641","id":"20200120-022616_1171418589","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:08-0800","dateFinished":"2020-01-20T06:23:08-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29002"},{"title":"17 - Clean up  the data","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T05:14:14-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414055_-1502064192","id":"20200120-022211_1079196563","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29003"},{"text":"%md\nThe second field contains the device manufacturer and model name (such as Ronin S2).\nSplit this field by spaces to separate the manufacturer from the model (for example, manufacturer Ronin, model S2). \nKeep just the manufacturer name.","user":"anonymous","dateUpdated":"2020-01-20T05:15:05-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414058_765809379","id":"20200120-023344_707527528","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:08-0800","dateFinished":"2020-01-20T06:23:08-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29004"},{"title":"18 - Create a new RDD containing date, manufacturer, device ID, latitude and longitude","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-20T05:15:16-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414059_1465948207","id":"20200120-023314_452836886","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29005"},{"title":"19 - Save the extracted data to comma-delimited text files in the /devsh_loudacre/devicestatus_etl directory on HDFS","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T05:15:28-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414062_-1708064987","id":"20200120-023503_1615260981","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29006"},{"text":"%md\nThe lines in the file should all look similar to this, with all fields delimited by commas.\n```spark\n 2014-03-15:10:10:20,Sorrento,8cc3b47e-bd01-4482- b500-28f2342679af,33.6894754264,-117.543308253\n```","user":"anonymous","dateUpdated":"2020-01-20T05:15:38-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414064_-1514965638","id":"20200120-023848_1552432120","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:08-0800","dateFinished":"2020-01-20T06:23:08-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29007"},{"title":"20 - Confirm that the data in the file(s) was saved correctly.","text":"%sh\n\n","user":"anonymous","dateUpdated":"2020-01-20T05:16:37-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414066_1705449882","id":"20200120-023845_483737466","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29008"},{"text":"%md\n### Bonus Exercise 2: Convert Multi-line XML files to CSV files\nOne of the common uses for RDDs in core Spark is to transform data from unstructured or semi-structured sources or formats that are not supported by Spark SQL to structured formats you can use with Spark SQL.\nIn this bonus exercise, you will convert a set of whole-file XML records to a CSV file that can be read into a DataFrame.\nReview the data on the local Linux filesystem in the directory /home/training/training_materials/devsh/data/activations. \nEach XML file contains data for all the devices activated by customers during a specific month.\nSample input data:\n```xml\n<activations>\n<activation timestamp=\"1225499258\" type=\"phone\">\n<account-number>316</account-number>\n<device-id> d61b6971-33e1-42f0-bb15-aa2ae3cd8680\n</device-id> <phone-number>5108307062</phone-number> <model>iFruit 1</model>\n   </activation>\n...\n</activations>\n```","user":"anonymous","dateUpdated":"2020-01-20T05:16:44-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414068_1340718948","id":"20200120-024539_1586366154","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:08-0800","dateFinished":"2020-01-20T06:23:08-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29009"},{"title":"21 - Copy the entire activations directory to /devsh_loudacre in HDFS","text":"%sh\n\n","user":"anonymous","dateUpdated":"2020-01-20T05:18:45-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414071_-2012257490","id":"20200120-024955_1346939274","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29010"},{"text":"%md\nCopy and paste the following code in the cell below to define convenience functions\n```spark\nimport scala.xml._\n\n// Given a string containing XML, parse the string, and \n// return an iterator of activation XML records (Nodes) contained in the string\n\ndef getActivations(xmlstring: String): Iterator[Node] = {\n    val nodes = XML.loadString(xmlstring) \\\\ \"activation\"\n    nodes.toIterator\n}\n\n// Given an activation record (XML Node), return the model name\ndef getModel(activation: Node): String = {\n   (activation \\ \"model\").text\n}\n\n// Given an activation record (XML Node), return the account number\ndef getAccount(activation: Node): String = {\n   (activation \\ \"account-number\").text\n\n```","user":"anonymous","dateUpdated":"2020-01-20T05:18:58-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414073_-889308829","id":"20200120-025508_282291001","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:09-0800","dateFinished":"2020-01-20T06:23:09-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29011"},{"title":"22 - Define convenience functions","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T05:19:57-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414075_-165343066","id":"20200120-025800_726122067","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29012"},{"text":"%md\nUse wholeTextFiles to create an RDD from the activations dataset. \nThe resulting RDD will consist of tuples, in which the first value is the name of the file, and the second value is the contents of the file (XML) as a string.","user":"anonymous","dateUpdated":"2020-01-20T05:20:14-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414078_-1607932158","id":"20200120-030018_1588727125","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:09-0800","dateFinished":"2020-01-20T06:23:09-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29013"},{"title":"23 - Use wholeTextFiles to create an RDD from the activations dataset","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T05:20:24-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414080_-551335240","id":"20200120-030100_1582491897","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29014"},{"text":"%md\nEach XML file can contain many activation records; use flatMap to map the contents of each file to a collection of XML records by calling the provided getActivations function.\ngetActivations takes an XML string, parses it, and returns a collection of XML records; flatMap maps each record to a separate RDD element.","user":"anonymous","dateUpdated":"2020-01-20T05:20:28-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414082_-275735285","id":"20200120-030327_385020183","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:09-0800","dateFinished":"2020-01-20T06:23:09-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29015"},{"title":"24 - Parse each file (as a string) into a collection of activation XML records","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T05:20:39-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414084_148049110","id":"20200120-030432_330347850","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29016"},{"text":"%md\nMap each activation record to a string in the format account-number:model.\nUse the provided getAccount and getModel functions to find the values from the activation record.","user":"anonymous","dateUpdated":"2020-01-20T05:20:57-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414087_406939012","id":"20200120-030631_196413858","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:09-0800","dateFinished":"2020-01-20T06:23:09-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29017"},{"title":"25 - Map each activation record to a string in the format account-number:model","text":"%spark\n\n","user":"anonymous","dateUpdated":"2020-01-20T05:21:14-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414089_-808940589","id":"20200120-030628_952569635","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29018"},{"title":"26 - Save the formatted strings to a text file in the directory /devsh_loudacre/ account-models","text":"%spark\n","user":"anonymous","dateUpdated":"2020-01-20T05:21:25-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414091_283534272","id":"20200120-030852_1771925889","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29019"},{"text":"%md\n# Result\n**You have now:** \n\n* loaded a simple text file into a Resilient Distributed Dataset (RDD),\n* created an RDD based on Loudacre’s website log data and \n* practiced transforming the data.\n\n---","user":"anonymous","dateUpdated":"2020-01-20T05:21:31-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414093_102805159","id":"20181119-142716_792318228","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:09-0800","dateFinished":"2020-01-20T06:23:09-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29020"},{"text":"%md\n# Solution\n---","user":"anonymous","dateUpdated":"2020-01-20T05:22:46-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414095_450114510","id":"20171113-155535_1769142099","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:09-0800","dateFinished":"2020-01-20T06:23:09-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29021"},{"title":"1 - Copy the weblogs directory from the local filesystem to the /devsh_loudacre HDFS directory","text":"%sh\n\nhdfs dfs -put /home/training/training_materials/devsh/data/weblogs /devsh_loudacre","user":"anonymous","dateUpdated":"2020-01-20T05:22:52-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414097_-622244126","id":"20200120-002914_1069892138","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:09-0800","dateFinished":"2020-01-20T06:23:20-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29022"},{"title":"2 - Create an RDD from the uploaded web logs data files in the /devsh_loudacre/weblogs/ directory in HDFS","text":"%spark\n\nval logsRDD = sc.textFile(\"/devsh_loudacre/weblogs/\")","user":"anonymous","dateUpdated":"2020-01-20T05:23:17-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414099_-531352136","id":"20200120-003233_234329874","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:20-0800","dateFinished":"2020-01-20T06:23:20-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29023"},{"title":"3 - Create an RDD containing only lines that are requests for JPG files","text":"%spark\n\nval jpglogsRDD=logsRDD.filter(line => line.contains(\".jpg\"))","user":"anonymous","dateUpdated":"2020-01-20T05:25:37-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414101_-2131575863","id":"20200120-003530_1847608903","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:20-0800","dateFinished":"2020-01-20T06:23:20-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29024"},{"title":"4 - Use take to return the first five lines of the data in jpglogsRDD","text":"%spark\n\nval jpgLines = jpglogsRDD.take(5)","user":"anonymous","dateUpdated":"2020-01-20T05:26:30-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414104_-225551290","id":"20200120-003721_957960497","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:20-0800","dateFinished":"2020-01-20T06:23:27-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29025"},{"title":"5 - Loop through and display the strings returned by take","text":"%spark\n\njpgLines.foreach(println)\n","user":"anonymous","dateUpdated":"2020-01-20T05:27:01-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414106_1613906469","id":"20200120-003836_1034138881","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:27-0800","dateFinished":"2020-01-20T06:23:28-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29026"},{"title":"6 - Use the map transformation to define a new RDD","text":"%spark\n\nval lineLengthsRDD = logsRDD.map(line => line.length)","user":"anonymous","dateUpdated":"2020-01-20T05:29:07-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414109_1032999809","id":"20200120-004722_1690655549","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:28-0800","dateFinished":"2020-01-20T06:23:28-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29027"},{"title":"7 - Loop through and display the first five elements (integers) in the RDD","text":"%spark\n\nlineLengthsRDD.take(5).foreach(println)","user":"anonymous","dateUpdated":"2020-01-20T05:29:50-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414111_317508770","id":"20200120-005150_2113187186","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:28-0800","dateFinished":"2020-01-20T06:23:28-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29028"},{"title":"8 - Create an RDD with all the fields in the weblogs","text":"%spark\n\nval lineFieldsRDD = logsRDD.map(line => line.split(' '))","user":"anonymous","dateUpdated":"2020-01-20T05:31:19-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414114_-327015273","id":"20200120-005912_750669124","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:28-0800","dateFinished":"2020-01-20T06:23:28-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29029"},{"title":"9 - Return the first five elements of lineFieldsRDD","text":"%spark\n\nval lineFields = lineFieldsRDD.take(5)","user":"anonymous","dateUpdated":"2020-01-20T05:32:13-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414116_1600342809","id":"20200120-011220_1085103604","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:28-0800","dateFinished":"2020-01-20T06:23:28-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29030"},{"title":"10  - Display the contents of the return from take","text":"%spark\n\nfor (fields <- lineFields) {\n  println(\"-------\")\n  fields.foreach(println)\n}","user":"anonymous","dateUpdated":"2020-01-20T05:37:19-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414119_1718197813","id":"20200120-011438_1958987337","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:29-0800","dateFinished":"2020-01-20T06:23:29-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29031"},{"title":"11 - Create a new RDD containing just the IP addresses from each line in the log file","text":"%spark\n\n// Map the log data to an RDD of IP addresses for each line \nval ipsRDD = logsRDD.map(line => line.split(' ')(0))\nipsRDD.take(5).foreach(println)","user":"anonymous","dateUpdated":"2020-01-20T05:43:04-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414121_1793479395","id":"20200120-013923_1000697022","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:29-0800","dateFinished":"2020-01-20T06:23:29-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29032"},{"title":"12 - Finally, save the list of IP addresses as a text file","text":"%spark\n\nipsRDD.saveAsTextFile(\"/devsh_loudacre/iplist\")","user":"anonymous","dateUpdated":"2020-01-20T05:43:21-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414124_254539962","id":"20200120-014137_1413343527","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:29-0800","dateFinished":"2020-01-20T06:23:41-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29033"},{"title":"13 - Confirm the files were created correctly","text":"%sh\n\nhdfs dfs -ls /devsh_loudacre/iplist\nhdfs dfs -tail /devsh_loudacre/iplist/part-00000","user":"anonymous","dateUpdated":"2020-01-20T05:43:45-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414126_-1898254081","id":"20200120-014354_284456265","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:41-0800","dateFinished":"2020-01-20T06:23:46-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29034"},{"title":"14 - Create a dataset consisting of the IP address and corresponding user ID for each request for an HTML file","text":"%spark\n\nvar userIPRDD=logsRDD.filter(_.contains(\".html\")).map(line => line.split(' ')(0) + \",\" + line.split(' ')(2))\nuserIPRDD.saveAsTextFile(\"/devsh_loudacre/userips_csv\")","user":"anonymous","dateUpdated":"2020-01-20T05:46:37-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414129_82154601","id":"20200120-015958_582450735","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:46-0800","dateFinished":"2020-01-20T06:23:52-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29035"},{"title":"15 - Load the new CSV files in /devsh_loudacre/userips_csv created above into a DataFrame, then view the data and schema","text":"%spark\n\nval useripsDF = spark.read.option(\"inferSchema\",\"true\").csv(\"/devsh_loudacre/userips_csv\")\nuseripsDF.printSchema\nz.show(useripsDF)","user":"anonymous","dateUpdated":"2020-01-20T05:58:23-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"_c0":"string","_c1":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414133_646671445","id":"20200120-020455_1308475709","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:52-0800","dateFinished":"2020-01-20T06:23:58-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29036"},{"title":"16 - Upload the devicestatus.txt file to HDFS","text":"%sh\n\nhdfs dfs -put /home/training/training_materials/devsh/data/devicestatus.txt /devsh_loudacre","user":"anonymous","dateUpdated":"2020-01-20T05:59:20-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414136_1460760462","id":"20200120-021351_26802562","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:23:58-0800","dateFinished":"2020-01-20T06:24:00-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29037"},{"title":"17 - Clean up the data","text":"%spark\n\n// Load the data file\nval devstatus = sc.textFile(\"/devsh_loudacre/devicestatus.txt\")\n\n// Filter out lines with < 20 characters, use the 20th character as the delimiter, parse the line, and filter out bad lines\nval cleanstatus = devstatus.\n    filter(line => line.length>20).\n    map(line => line.split(line.charAt(19))).\n    filter(values => values.length == 14)\n","user":"anonymous","dateUpdated":"2020-01-20T06:11:47-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414139_90429101","id":"20200120-022239_42556740","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:24:00-0800","dateFinished":"2020-01-20T06:24:00-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29038"},{"title":"18 - Create a new RDD containing date, manufacturer, device ID, latitude and longitude","text":"%spark\n\n// Create a new RDD containing date, manufacturer, device ID, latitude and longitude\nval devicedata = cleanstatus.map(values => (values(0), values(1).split(' ')(0), values(2), values(12), values(13)))","user":"anonymous","dateUpdated":"2020-01-20T06:12:00-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414141_540766326","id":"20200120-023138_511337312","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:24:00-0800","dateFinished":"2020-01-20T06:24:01-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29039"},{"title":"19 - Save the extracted data to comma-delimited text files in the /devsh_loudacre/devicestatus_etl directory on HDFS","text":"%spark\n\n// Save to a CSV file as a comma-delimited string (trim parenthesis from tuple toString)\ndevicedata.map(values => values.toString).map(s => s.substring(1,s.length-1)).saveAsTextFile(\"/devsh_loudacre/devicestatus_etl\")","user":"anonymous","dateUpdated":"2020-01-20T06:13:02-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414144_-689014758","id":"20200120-023531_1129507359","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:24:01-0800","dateFinished":"2020-01-20T06:24:02-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29040"},{"title":"20 - Confirm that the data in the file(s) was saved correctly.","text":"%sh\n\nhdfs dfs -ls /devsh_loudacre/devicestatus_etl\nhdfs dfs -tail /devsh_loudacre/devicestatus_etl/part-00000","user":"anonymous","dateUpdated":"2020-01-20T06:13:24-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414146_47242614","id":"20200120-024106_1698475884","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:24:02-0800","dateFinished":"2020-01-20T06:24:06-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29041"},{"title":"21 - Copy the entire activations directory to /devsh_loudacre in HDFS","text":"%sh\n\nhdfs dfs -put /home/training/training_materials/devsh/data/activations /devsh_loudacre","user":"anonymous","dateUpdated":"2020-01-20T06:13:38-0800","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414149_-476495301","id":"20200120-025020_1285199608","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:24:06-0800","dateFinished":"2020-01-20T06:24:11-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29042"},{"title":"22 - Define convenience functions","text":"%spark\n\nimport scala.xml._\n\n// Given a string containing XML, parse the string, and \n// return an iterator of activation XML records (Nodes) contained in the string\n\ndef getActivations(xmlstring: String): Iterator[Node] = {\n    val nodes = XML.loadString(xmlstring) \\\\ \"activation\"\n    nodes.toIterator\n}\n\n// Given an activation record (XML Node), return the model name\ndef getModel(activation: Node): String = {\n   (activation \\ \"model\").text\n}\n\n// Given an activation record (XML Node), return the account number\ndef getAccount(activation: Node): String = {\n   (activation \\ \"account-number\").text\n}","user":"anonymous","dateUpdated":"2020-01-20T06:17:55-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414151_424529302","id":"20200120-025849_1625267335","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:24:11-0800","dateFinished":"2020-01-20T06:24:11-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29043"},{"title":"23 - Use wholeTextFiles to create an RDD from the activations dataset","text":"%spark\n\n// Load activation XML files\nval files=\"/devsh_loudacre/activations\"    \nval activationFiles = sc.wholeTextFiles(files)","user":"anonymous","dateUpdated":"2020-01-20T06:18:12-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414154_-2052020657","id":"20200120-030152_1371790066","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:24:11-0800","dateFinished":"2020-01-20T06:24:11-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29044"},{"title":"24 - Parse each file (as a string) into a collection of activation XML records","text":"%spark\n\n// Parse each file (as a string) into a collection of activation XML records\nval activationTrees = activationFiles.flatMap(pair => getActivations(pair._2))","user":"anonymous","dateUpdated":"2020-01-20T06:19:02-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414156_1729019530","id":"20200120-030459_712323819","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:24:12-0800","dateFinished":"2020-01-20T06:24:12-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29045"},{"title":"25 - Map each activation record to a string in the format account-number:model","text":"%spark\n\n// Map each activation record to (account-number, model name)\nval models = activationTrees.map(record => getAccount(record) + \":\" + getModel(record))","user":"anonymous","dateUpdated":"2020-01-20T06:19:49-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414158_992517896","id":"20200120-030718_323721915","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:24:12-0800","dateFinished":"2020-01-20T06:24:12-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29046"},{"title":"26 - Save the formatted strings to a text file in the directory /devsh_loudacre/ account-models","text":"%spark\n\nmodels.saveAsTextFile(\"/devsh_loudacre/account-models\")","user":"anonymous","dateUpdated":"2020-01-20T06:20:09-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414161_-455573370","id":"20200120-030915_1401739400","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:24:12-0800","dateFinished":"2020-01-20T06:24:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29047"},{"title":"Additional resources","text":"%md\nWe hope you've enjoyed this lab. Below are additional resources that you should find useful:\n\n1. [Cloudera Tutorials](http://cloudera.com/tutorials.html) are your natural next step where you can explore Spark in more depth.\n2. [Cloudera Community](https://community.cloudera.com) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Apache Spark Documentation](https://spark.apache.org/documentation.html) - official Spark documentation.\n4. [Apache Zeppelin Project Home Page](https://zeppelin.apache.org) - official Zeppelin web site.\n","user":"anonymous","dateUpdated":"2020-01-20T03:40:14-0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":10,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414163_1164382254","id":"20181116-135131_93712280","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:24:16-0800","dateFinished":"2020-01-20T06:24:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29048"},{"text":"%angular\n</br>\n</br>\n</br>\n</br>\n<center>\n<a href=\"https://www.cloudera.com/about/training/courses.html\">\n  <img src=\"https://www.cloudera.com/content/dam/www/marketing/media-kit/logo-assets/cloudera_logo_darkorange.png\" alt=\"Cloudera Educational Services\" style=\"width:280px;height:40px;border:0;\" align=\"middle\">\n</a>\n</center>\n</br>\n</br>","user":"anonymous","dateUpdated":"2020-01-20T03:40:14-0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":2,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414165_-1274564069","id":"20200110-154537_1406191376","dateCreated":"2020-01-20T03:40:14-0800","dateStarted":"2020-01-20T06:24:16-0800","dateFinished":"2020-01-20T06:24:16-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29049"},{"text":"%angular\n","user":"anonymous","dateUpdated":"2020-01-20T03:40:14-0800","config":{"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579520414167_-2142542883","id":"20200110-162013_302547143","dateCreated":"2020-01-20T03:40:14-0800","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:29050"}],"name":"Labs/Scala/TransformingDataWithRDDs","id":"2F12PYU8U","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"angular:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}